

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 10 13:08:26 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 17/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F452 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63 ;; Function _dio_drv_get is unused but had its address taken
    64   000000                     
    65 ;; Function _dio_drv_callback is unused but had its address taken
    66   000000                     
    67 ;; Function _write_enabled is unused but had its address taken
    68   000000                     
    69 ;; Function _write_port is unused but had its address taken
    70   000000                     
    71 ;; Function _send_byte is unused but had its address taken
    72   000000                     
    73 ;; Function _psg_silence is unused but had its address taken
    74   000000                     
    75                           	psect	idataCOMRAM
    76   000FC8                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _d0_out_st
    80   000FC8  00                 	db	0
    81   000FC9  00                 	db	0
    82   000FCA  00                 	db	0
    83   000FCB  00                 	db	0
    84   000FCC  00                 	db	0
    85   000FCD  00                 	db	0
    86   000FCE  0000               	dw	0
    87   000FD0  0000               	dw	0
    88   000FD2  00                 	db	0
    89   000FD3  00                 	db	0
    90   000FD4  18                 	db	24
    91   000FD5  00                 	db	0
    92   000FD6  00                 	db	0
    93   000FD7  00                 	db	0
    94   000FD8  00                 	db	0
    95   000FD9  00                 	db	0
    96   000FDA  00                 	db	0
    97   000FDB  00                 	db	0
    98   000FDC  00                 	db	0
    99                           
   100                           	psect	smallconst
   101   000600                     __psmallconst:
   102                           	callstack 0
   103   000600  00                 	db	0
   104   000601                     _dio_reg_out:
   105                           	callstack 0
   106   000601  89                 	db	137
   107   000602  0F                 	db	15
   108   000603  8A                 	db	138
   109   000604  0F                 	db	15
   110   000605  8B                 	db	139
   111   000606  0F                 	db	15
   112   000607  8C                 	db	140
   113   000608  0F                 	db	15
   114   000609  8D                 	db	141
   115   00060A  0F                 	db	15
   116   00060B                     __end_of_dio_reg_out:
   117                           	callstack 0
   118   00060B                     _dio_reg_dir:
   119                           	callstack 0
   120   00060B  92                 	db	146
   121   00060C  0F                 	db	15
   122   00060D  93                 	db	147
   123   00060E  0F                 	db	15
   124   00060F  94                 	db	148
   125   000610  0F                 	db	15
   126   000611  95                 	db	149
   127   000612  0F                 	db	15
   128   000613  96                 	db	150
   129   000614  0F                 	db	15
   130   000615                     __end_of_dio_reg_dir:
   131                           	callstack 0
   132   000615                     _dio_reg_in:
   133                           	callstack 0
   134   000615  80                 	db	128
   135   000616  0F                 	db	15
   136   000617  81                 	db	129
   137   000618  0F                 	db	15
   138   000619  82                 	db	130
   139   00061A  0F                 	db	15
   140   00061B  83                 	db	131
   141   00061C  0F                 	db	15
   142   00061D  84                 	db	132
   143   00061E  0F                 	db	15
   144   00061F                     __end_of_dio_reg_in:
   145                           	callstack 0
   146   000000                     _INTCON	set	4082
   147   000000                     _LATDbits	set	3980
   148   000000                     _LATA	set	3977
   149   000000                     _TRISA	set	3986
   150   000000                     _PORTE	set	3972
   151   000000                     _PORTD	set	3971
   152   000000                     _PORTC	set	3970
   153   000000                     _PORTB	set	3969
   154   000000                     _PORTA	set	3968
   155   000000                     _RCONbits	set	4048
   156   000000                     _T0CONbits	set	4053
   157   000000                     _INTCON2bits	set	4081
   158   000000                     _TRISE	set	3990
   159   000000                     _TRISD	set	3989
   160   000000                     _TRISC	set	3988
   161   000000                     _TRISB	set	3987
   162   000000                     _LATE	set	3981
   163   000000                     _LATD	set	3980
   164   000000                     _LATC	set	3979
   165   000000                     _LATB	set	3978
   166   000000                     _INTCONbits	set	4082
   167   000000                     _TMR0L	set	4054
   168   00061F  00                 	db	0	; dummy byte at the end
   169   000000                     
   170                           ; #config settings
   171                           
   172                           	psect	cinit
   173   000F46                     __pcinit:
   174                           	callstack 0
   175   000F46                     start_initialization:
   176                           	callstack 0
   177   000F46                     __initialization:
   178                           	callstack 0
   179                           
   180                           ; Initialize objects allocated to COMRAM (21 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182   000F46  0EC8               	movlw	low __pidataCOMRAM
   183   000F48  6EF6               	movwf	tblptrl,c
   184   000F4A  0E0F               	movlw	high __pidataCOMRAM
   185   000F4C  6EF7               	movwf	tblptrh,c
   186   000F4E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187   000F50  6EF8               	movwf	tblptru,c
   188   000F52  EE00  F033         	lfsr	0,__pdataCOMRAM
   189   000F56  EE10 F015          	lfsr	1,21
   190   000F5A                     copy_data0:
   191   000F5A  0009               	tblrd		*+
   192   000F5C  CFF5 FFEE          	movff	tablat,postinc0
   193   000F60  50E5               	movf	postdec1,w,c
   194   000F62  50E1               	movf	fsr1l,w,c
   195   000F64  E1FA               	bnz	copy_data0
   196                           
   197                           ; Clear objects allocated to COMRAM (24 bytes)
   198   000F66  EE00  F01B         	lfsr	0,__pbssCOMRAM
   199   000F6A  0E18               	movlw	24
   200   000F6C                     clear_0:
   201   000F6C  6AEE               	clrf	postinc0,c
   202   000F6E  06E8               	decf	wreg,f,c
   203   000F70  E1FD               	bnz	clear_0
   204   000F72                     end_of_initialization:
   205                           	callstack 0
   206   000F72                     __end_of__initialization:
   207                           	callstack 0
   208   000F72  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   000F74  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   000F76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211   000F78  6EF8               	movwf	tblptru,c
   212   000F7A  0100               	movlb	0
   213   000F7C  EF5D  F007         	goto	_main	;jump to C main() function
   214                           
   215                           	psect	bssCOMRAM
   216   00001B                     __pbssCOMRAM:
   217                           	callstack 0
   218   00001B                     _led_out_pst:
   219                           	callstack 0
   220   00001B                     	ds	2
   221   00001D                     led_toggle@i:
   222                           	callstack 0
   223   00001D                     	ds	1
   224   00001E                     _led_out_st:
   225                           	callstack 0
   226   00001E                     	ds	21
   227                           
   228                           	psect	dataCOMRAM
   229   000033                     __pdataCOMRAM:
   230                           	callstack 0
   231   000033                     _d0_out_st:
   232                           	callstack 0
   233   000033                     	ds	21
   234                           
   235                           	psect	cstackCOMRAM
   236   000001                     __pcstackCOMRAM:
   237                           	callstack 0
   238   000001                     ??_lo_isr:
   239   000001                     
   240                           ; 2 bytes @ 0x0
   241   000001                     	ds	4
   242   000005                     ?___awdiv:
   243                           	callstack 0
   244   000005                     ___awdiv@dividend:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248   000005                     	ds	2
   249   000007                     ___awdiv@divisor:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x6
   253   000007                     	ds	2
   254   000009                     ___awdiv@counter:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x8
   258   000009                     	ds	1
   259   00000A                     ___awdiv@sign:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x9
   263   00000A                     	ds	1
   264   00000B                     ___awdiv@quotient:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xA
   268   00000B                     	ds	2
   269   00000D                     dio_drv_init@self:
   270                           	callstack 0
   271   00000D                     dio_drv_set@self:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0xC
   275   00000D                     	ds	1
   276   00000E                     ??_dio_drv_init:
   277                           
   278                           ; 1 bytes @ 0xD
   279   00000E                     	ds	1
   280   00000F                     dio_drv_set@state_b:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0xE
   284   00000F                     	ds	1
   285   000010                     ??_dio_drv_set:
   286                           
   287                           ; 1 bytes @ 0xF
   288   000010                     	ds	4
   289   000014                     dio_drv_init@dio_drv_pst:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x13
   293   000014                     	ds	1
   294   000015                     dio_drv_init@number:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x14
   298   000015                     	ds	1
   299   000016                     dio_drv_init@position:
   300                           	callstack 0
   301   000016                     dio_drv_set@dio_drv_pst:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x15
   305   000016                     	ds	1
   306   000017                     init_dio_drv@self:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x16
   310   000017                     	ds	1
   311   000018                     dio_drv_set@number:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x17
   315   000018                     	ds	1
   316   000019                     dio_drv_set@position:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x18
   320   000019                     	ds	1
   321   00001A                     ??_led_toggle:
   322                           
   323                           ; 1 bytes @ 0x19
   324   00001A                     	ds	1
   325   00001B                     
   326                           ; 1 bytes @ 0x1A
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 70 in file "../app/src/main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  2  193[None  ] int 
   339 ;; Registers used:
   340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   346 ;;      Params:         0       0       0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0       0       0
   348 ;;      Temps:          0       0       0       0       0       0       0
   349 ;;      Totals:         0       0       0       0       0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels required when called: 7
   352 ;; This function calls:
   353 ;;		NULL
   354 ;;		_dio_drv_set
   355 ;;		_led_toggle
   356 ;;		_setup_pins
   357 ;;		_timer0
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text0
   364   000EBA                     __ptext0:
   365                           	callstack 0
   366   000EBA                     _main:
   367                           	callstack 24
   368   000EBA  FFFF               	dw	65535	; assembler added errata NOP
   369                           
   370                           ;../app/src/main.c: 74:     setup_pins();
   371   000EBC  ECC0  F007         	call	_setup_pins	;wreg free
   372   000EC0                     
   373                           ;../app/src/main.c: 75:     timer0();
   374   000EC0  ECD5  F007         	call	_timer0	;wreg free
   375   000EC4                     
   376                           ;../app/src/main.c: 79:     led_out_pst->set(led_out_pst, 0);
   377   000EC4  C01B  F00D         	movff	_led_out_pst,dio_drv_set@self
   378   000EC8  C01C  F00E         	movff	_led_out_pst+1,dio_drv_set@self+1
   379   000ECC  0E00               	movlw	0
   380   000ECE  6E0F               	movwf	dio_drv_set@state_b^0,c
   381   000ED0  EE20 F002          	lfsr	2,2
   382   000ED4  501B               	movf	_led_out_pst^0,w,c
   383   000ED6  26D9               	addwf	fsr2l,f,c
   384   000ED8  501C               	movf	(_led_out_pst+1)^0,w,c
   385   000EDA  22DA               	addwfc	fsr2h,f,c
   386   000EDC  D802               	call	u978
   387   000EDE  EF7D  F007         	goto	u979
   388   000EE2                     u978:
   389   000EE2  FFFF               	dw	65535	; assembler added errata NOP
   390   000EE4  0005               	push	
   391   000EE6  6EFA               	movwf	pclath,c
   392   000EE8  50DE               	movf	postinc2,w,c
   393   000EEA  6EFD               	movwf	tosl,c
   394   000EEC  50DE               	movf	postinc2,w,c
   395   000EEE  6EFE               	movwf	tosh,c
   396   000EF0  50F8               	movf	tblptru,w,c
   397   000EF2  6EFF               	movwf	tosu,c
   398   000EF4  50FA               	movf	pclath,w,c
   399   000EF6  0012               	return		;indir
   400   000EF8  FFFF               	dw	65535	; errata NOP
   401   000EFA                     u979:
   402   000EFA  FFFF               	dw	65535	; assembler added errata NOP
   403   000EFC                     l1441:
   404   000EFC  FFFF               	dw	65535	; assembler added errata NOP
   405                           
   406                           ;../app/src/main.c: 82:     {;../app/src/main.c: 83:         led_toggle();
   407   000EFE  ECD1  F006         	call	_led_toggle	;wreg free
   408   000F02  EF7E  F007         	goto	l1441
   409   000F06  EF3C  F000         	goto	start
   410   000F0A                     __end_of_main:
   411                           	callstack 0
   412                           
   413 ;; *************** function _timer0 *****************
   414 ;; Defined at:
   415 ;;		line 54 in file "../app/src/gpio.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   429 ;;      Params:         0       0       0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 2
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text1
   444   000FAA                     __ptext1:
   445                           	callstack 0
   446   000FAA                     _timer0:
   447                           	callstack 0
   448   000FAA  FFFF               	dw	65535	; assembler added errata NOP
   449   000FAC                     
   450                           ;../app/src/gpio.c: 62:  INTCON2bits.TMR0IP = 0;
   451   000FAC  94F1               	bcf	241,2,c	;volatile
   452                           
   453                           ;../app/src/gpio.c: 64:  T0CONbits.TMR0ON = 1;
   454   000FAE  8ED5               	bsf	213,7,c	;volatile
   455                           
   456                           ;../app/src/gpio.c: 65:  T0CONbits.T08BIT = 1;
   457   000FB0  8CD5               	bsf	213,6,c	;volatile
   458                           
   459                           ;../app/src/gpio.c: 66:  T0CONbits.T0CS = 0;
   460   000FB2  9AD5               	bcf	213,5,c	;volatile
   461                           
   462                           ;../app/src/gpio.c: 67:  T0CONbits.T0SE = 0;
   463   000FB4  98D5               	bcf	213,4,c	;volatile
   464                           
   465                           ;../app/src/gpio.c: 68:  T0CONbits.PSA = 1;
   466   000FB6  86D5               	bsf	213,3,c	;volatile
   467                           
   468                           ;../app/src/gpio.c: 71:  T0CONbits.T0PS2 = 0;
   469   000FB8  94D5               	bcf	213,2,c	;volatile
   470                           
   471                           ;../app/src/gpio.c: 72:  T0CONbits.T0PS1 = 0;
   472   000FBA  92D5               	bcf	213,1,c	;volatile
   473                           
   474                           ;../app/src/gpio.c: 73:  T0CONbits.T0PS0 = 0;
   475   000FBC  90D5               	bcf	213,0,c	;volatile
   476                           
   477                           ;../app/src/gpio.c: 74:  INTCONbits.TMR0IE = 1;
   478   000FBE  8AF2               	bsf	242,5,c	;volatile
   479   000FC0                     
   480                           ;../app/src/gpio.c: 75:  TMR0L = 0xF0;
   481   000FC0  0EF0               	movlw	240
   482   000FC2  6ED6               	movwf	214,c	;volatile
   483   000FC4  0012               	return		;funcret
   484   000FC6  FFFF               	dw	65535	; errata NOP
   485   000FC8                     __end_of_timer0:
   486                           	callstack 0
   487                           
   488 ;; *************** function _setup_pins *****************
   489 ;; Defined at:
   490 ;;		line 46 in file "../app/src/main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         0       0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 6
   511 ;; This function calls:
   512 ;;		_gpio_init_pins
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text2
   519   000F80                     __ptext2:
   520                           	callstack 0
   521   000F80                     _setup_pins:
   522                           	callstack 0
   523   000F80  FFFF               	dw	65535	; assembler added errata NOP
   524   000F82                     
   525                           ;../app/src/main.c: 49:     TRISA = 0b00000010;
   526   000F82  0E02               	movlw	2
   527   000F84  6E92               	movwf	146,c	;volatile
   528                           
   529                           ;../app/src/main.c: 50:  TRISB = 0b00000000;
   530   000F86  0E00               	movlw	0
   531   000F88  6E93               	movwf	147,c	;volatile
   532                           
   533                           ;../app/src/main.c: 51:  TRISC = 0b10010000;
   534   000F8A  0E90               	movlw	144
   535   000F8C  6E94               	movwf	148,c	;volatile
   536                           
   537                           ;../app/src/main.c: 52:  TRISD = 0;
   538   000F8E  0E00               	movlw	0
   539   000F90  6E95               	movwf	149,c	;volatile
   540                           
   541                           ;../app/src/main.c: 53:  TRISE = 0;
   542   000F92  0E00               	movlw	0
   543   000F94  6E96               	movwf	150,c	;volatile
   544   000F96                     
   545                           ;../app/src/main.c: 56:     gpio_init_pins();
   546   000F96  EC85  F007         	call	_gpio_init_pins	;wreg free
   547   000F9A                     
   548                           ;../app/src/main.c: 58:  INTCON = 1;
   549   000F9A  0E01               	movlw	1
   550   000F9C  6EF2               	movwf	242,c	;volatile
   551   000F9E                     
   552                           ;../app/src/main.c: 60:  RCONbits.IPEN = 1;
   553   000F9E  8ED0               	bsf	208,7,c	;volatile
   554   000FA0                     
   555                           ;../app/src/main.c: 61:  INTCONbits.GIEH = 1;
   556   000FA0  8EF2               	bsf	242,7,c	;volatile
   557   000FA2                     
   558                           ;../app/src/main.c: 62:     INTCONbits.GIEL = 1;
   559   000FA2  8CF2               	bsf	242,6,c	;volatile
   560   000FA4                     
   561                           ;../app/src/main.c: 63:  INTCONbits.GIE = 1;
   562   000FA4  8EF2               	bsf	242,7,c	;volatile
   563   000FA6  0012               	return		;funcret
   564   000FA8  FFFF               	dw	65535	; errata NOP
   565   000FAA                     __end_of_setup_pins:
   566                           	callstack 0
   567                           
   568 ;; *************** function _gpio_init_pins *****************
   569 ;; Defined at:
   570 ;;		line 37 in file "../app/src/gpio.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   584 ;;      Params:         0       0       0       0       0       0       0
   585 ;;      Locals:         0       0       0       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0       0       0
   587 ;;      Totals:         0       0       0       0       0       0       0
   588 ;;Total ram usage:        0 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; Hardware stack levels required when called: 5
   591 ;; This function calls:
   592 ;;		_init_dio_drv
   593 ;; This function is called by:
   594 ;;		_setup_pins
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text3
   599   000F0A                     __ptext3:
   600                           	callstack 0
   601   000F0A                     _gpio_init_pins:
   602                           	callstack 0
   603   000F0A  FFFF               	dw	65535	; assembler added errata NOP
   604   000F0C                     
   605                           ;../app/src/gpio.c: 39:     init_dio_drv(&led_out_st);
   606   000F0C  0E1E               	movlw	low _led_out_st
   607   000F0E  6E17               	movwf	init_dio_drv@self^0,c
   608   000F10  EC1B  F007         	call	_init_dio_drv	;wreg free
   609                           
   610                           ;../app/src/gpio.c: 40:     init_dio_drv(&d0_out_st);
   611   000F14  0E33               	movlw	low _d0_out_st
   612   000F16  6E17               	movwf	init_dio_drv@self^0,c
   613   000F18  EC1B  F007         	call	_init_dio_drv	;wreg free
   614   000F1C                     
   615                           ;../app/src/gpio.c: 45:     led_out_pst = &led_out_st.super;
   616   000F1C  0E1E               	movlw	low _led_out_st
   617   000F1E  6E1B               	movwf	_led_out_pst^0,c
   618   000F20  6A1C               	clrf	(_led_out_pst+1)^0,c
   619   000F22                     
   620                           ;../app/src/gpio.c: 46:     led_out_pst->callback_time_ms_u16 = 0;
   621   000F22  EE20 F006          	lfsr	2,6
   622   000F26  501B               	movf	_led_out_pst^0,w,c
   623   000F28  26D9               	addwf	fsr2l,f,c
   624   000F2A  501C               	movf	(_led_out_pst+1)^0,w,c
   625   000F2C  22DA               	addwfc	fsr2h,f,c
   626   000F2E  6ADE               	clrf	postinc2,c
   627   000F30  6ADD               	clrf	postdec2,c
   628   000F32                     
   629                           ;../app/src/gpio.c: 47:     led_out_pst->filter_time_ms_u16 = 0;
   630   000F32  EE20 F008          	lfsr	2,8
   631   000F36  501B               	movf	_led_out_pst^0,w,c
   632   000F38  26D9               	addwf	fsr2l,f,c
   633   000F3A  501C               	movf	(_led_out_pst+1)^0,w,c
   634   000F3C  22DA               	addwfc	fsr2h,f,c
   635   000F3E  6ADE               	clrf	postinc2,c
   636   000F40  6ADD               	clrf	postdec2,c
   637   000F42  0012               	return		;funcret
   638   000F44  FFFF               	dw	65535	; errata NOP
   639   000F46                     __end_of_gpio_init_pins:
   640                           	callstack 0
   641                           
   642 ;; *************** function _init_dio_drv *****************
   643 ;; Defined at:
   644 ;;		line 271 in file "../drivers/microchip/PIC18F452/dio/src/dio_drv.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  self            1   22[COMRAM] PTR struct dio_drv_st
   647 ;;		 -> d0_out_st(21), led_out_st(21), 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   659 ;;      Params:         1       0       0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0
   662 ;;      Totals:         1       0       0       0       0       0       0
   663 ;;Total ram usage:        1 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; Hardware stack levels required when called: 4
   666 ;; This function calls:
   667 ;;		_dio_drv_init
   668 ;; This function is called by:
   669 ;;		_gpio_init_pins
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text4
   674   000E36                     __ptext4:
   675                           	callstack 0
   676   000E36                     _init_dio_drv:
   677                           	callstack 0
   678   000E36  FFFF               	dw	65535	; assembler added errata NOP
   679   000E38                     
   680                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 271: void init_dio_drv(dio_drv_tst *s
      +                          elf);../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 272: {;../drivers/microchip/PIC18
      +                          F452/dio/src/dio_drv.c: 274:     self->super.callback = (void (*)(dio_if_tst *))dio_drv_
      +                          callback;
   681   000E38  5017               	movf	init_dio_drv@self^0,w,c
   682   000E3A  6ED9               	movwf	fsr2l,c
   683   000E3C  6ADA               	clrf	fsr2h,c
   684   000E3E  0E00               	movlw	0
   685   000E40  6EDE               	movwf	postinc2,c
   686   000E42  0E00               	movlw	0
   687   000E44  6EDD               	movwf	postdec2,c
   688   000E46                     
   689                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 275:     self->super.set = (void (*)(
      +                          dio_if_tst *, _Bool))dio_drv_set;
   690   000E46  5017               	movf	init_dio_drv@self^0,w,c
   691   000E48  6ED9               	movwf	fsr2l,c
   692   000E4A  6ADA               	clrf	fsr2h,c
   693   000E4C  0E02               	movlw	2
   694   000E4E  26D9               	addwf	fsr2l,f,c
   695   000E50  0E0C               	movlw	low _dio_drv_set
   696   000E52  6EDE               	movwf	postinc2,c
   697   000E54  0E0A               	movlw	high _dio_drv_set
   698   000E56  6EDD               	movwf	postdec2,c
   699   000E58                     
   700                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 276:     self->super.get = (_Bool (*)
      +                          (dio_if_tst *))dio_drv_get;
   701   000E58  5017               	movf	init_dio_drv@self^0,w,c
   702   000E5A  6ED9               	movwf	fsr2l,c
   703   000E5C  6ADA               	clrf	fsr2h,c
   704   000E5E  0E04               	movlw	4
   705   000E60  26D9               	addwf	fsr2l,f,c
   706   000E62  0E00               	movlw	0
   707   000E64  6EDE               	movwf	postinc2,c
   708   000E66  0E00               	movlw	0
   709   000E68  6EDD               	movwf	postdec2,c
   710   000E6A                     
   711                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 277:     self->super.filtered_state_b
      +                           = 0;
   712   000E6A  5017               	movf	init_dio_drv@self^0,w,c
   713   000E6C  6ED9               	movwf	fsr2l,c
   714   000E6E  6ADA               	clrf	fsr2h,c
   715   000E70  0E0A               	movlw	10
   716   000E72  26D9               	addwf	fsr2l,f,c
   717   000E74  6ADF               	clrf	indf2,c
   718   000E76                     
   719                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 279:     self->init = dio_drv_init;
   720   000E76  5017               	movf	init_dio_drv@self^0,w,c
   721   000E78  6ED9               	movwf	fsr2l,c
   722   000E7A  6ADA               	clrf	fsr2h,c
   723   000E7C  0E13               	movlw	19
   724   000E7E  26D9               	addwf	fsr2l,f,c
   725   000E80  0E20               	movlw	low _dio_drv_init
   726   000E82  6EDE               	movwf	postinc2,c
   727   000E84  0E06               	movlw	high _dio_drv_init
   728   000E86  6EDD               	movwf	postdec2,c
   729   000E88                     
   730                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 281:     self->init(self);
   731   000E88  C017  F00D         	movff	init_dio_drv@self,dio_drv_init@self
   732   000E8C  5017               	movf	init_dio_drv@self^0,w,c
   733   000E8E  6ED9               	movwf	fsr2l,c
   734   000E90  6ADA               	clrf	fsr2h,c
   735   000E92  0E13               	movlw	19
   736   000E94  26D9               	addwf	fsr2l,f,c
   737   000E96  D802               	call	u758
   738   000E98  EF5A  F007         	goto	u759
   739   000E9C                     u758:
   740   000E9C  FFFF               	dw	65535	; assembler added errata NOP
   741   000E9E  0005               	push	
   742   000EA0  6EFA               	movwf	pclath,c
   743   000EA2  50DE               	movf	postinc2,w,c
   744   000EA4  6EFD               	movwf	tosl,c
   745   000EA6  50DE               	movf	postinc2,w,c
   746   000EA8  6EFE               	movwf	tosh,c
   747   000EAA  50F8               	movf	tblptru,w,c
   748   000EAC  6EFF               	movwf	tosu,c
   749   000EAE  50FA               	movf	pclath,w,c
   750   000EB0  0012               	return		;indir
   751   000EB2  FFFF               	dw	65535	; errata NOP
   752   000EB4                     u759:
   753   000EB4  FFFF               	dw	65535	; assembler added errata NOP
   754   000EB6  0012               	return		;funcret
   755   000EB8  FFFF               	dw	65535	; errata NOP
   756   000EBA                     __end_of_init_dio_drv:
   757                           	callstack 0
   758                           
   759 ;; *************** function _dio_drv_init *****************
   760 ;; Defined at:
   761 ;;		line 71 in file "../drivers/microchip/PIC18F452/dio/src/dio_drv.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  self            1   12[COMRAM] PTR struct dio_drv_st
   764 ;;		 -> d0_out_st(21), led_out_st(21), 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  dio_drv_pst     1   19[COMRAM] PTR struct dio_drv_st
   767 ;;		 -> d0_out_st(21), led_out_st(21), 
   768 ;;  position        1   21[COMRAM] volatile unsigned char 
   769 ;;  number          1   20[COMRAM] volatile unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2   12[COMRAM] short 
   772 ;; Registers used:
   773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   779 ;;      Params:         1       0       0       0       0       0       0
   780 ;;      Locals:         3       0       0       0       0       0       0
   781 ;;      Temps:          6       0       0       0       0       0       0
   782 ;;      Totals:        10       0       0       0       0       0       0
   783 ;;Total ram usage:       10 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 3
   786 ;; This function calls:
   787 ;;		___awdiv
   788 ;; This function is called by:
   789 ;;		_init_dio_drv
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text5
   794   000620                     __ptext5:
   795                           	callstack 0
   796   000620                     _dio_drv_init:
   797                           	callstack 24
   798   000620  FFFF               	dw	65535	; assembler added errata NOP
   799                           
   800                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 71: static int16_t dio_drv_init(struc
      +                          t dio_drv_st *self);../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 72: {;../drivers/m
      +                          icrochip/PIC18F452/dio/src/dio_drv.c: 73:     dio_drv_tst *dio_drv_pst = (dio_drv_tst *)
      +                          self;
   801   000622  C00D  F014         	movff	dio_drv_init@self,dio_drv_init@dio_drv_pst
   802   000626                     
   803                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 74:     volatile uint8_t number = 0;
   804   000626  0E00               	movlw	0
   805   000628  6E15               	movwf	dio_drv_init@number^0,c	;volatile
   806   00062A                     
   807                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 75:     volatile uint8_t position = 0
      +                          ;
   808   00062A  0E00               	movlw	0
   809   00062C  6E16               	movwf	dio_drv_init@position^0,c	;volatile
   810   00062E                     
   811                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 77:     number = dio_drv_pst->cfg_st.
      +                          pin_u8 / (8);
   812   00062E  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
   813   000630  6ED9               	movwf	fsr2l,c
   814   000632  6ADA               	clrf	fsr2h,c
   815   000634  0E0C               	movlw	12
   816   000636  26D9               	addwf	fsr2l,f,c
   817   000638  50DF               	movf	indf2,w,c
   818   00063A  6E0E               	movwf	??_dio_drv_init^0,c
   819   00063C  500E               	movf	??_dio_drv_init^0,w,c
   820   00063E  6E05               	movwf	___awdiv@dividend^0,c
   821   000640  6A06               	clrf	(___awdiv@dividend+1)^0,c
   822   000642  0E00               	movlw	0
   823   000644  6E08               	movwf	(___awdiv@divisor+1)^0,c
   824   000646  0E08               	movlw	8
   825   000648  6E07               	movwf	___awdiv@divisor^0,c
   826   00064A  EC59  F006         	call	___awdiv	;wreg free
   827   00064E  5005               	movf	?___awdiv^0,w,c
   828   000650  6E15               	movwf	dio_drv_init@number^0,c	;volatile
   829   000652                     
   830                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 78:     position = dio_drv_pst->cfg_s
      +                          t.pin_u8 % (8);
   831   000652  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
   832   000654  6ED9               	movwf	fsr2l,c
   833   000656  6ADA               	clrf	fsr2h,c
   834   000658  0E0C               	movlw	12
   835   00065A  26D9               	addwf	fsr2l,f,c
   836   00065C  50DF               	movf	indf2,w,c
   837   00065E  0B07               	andlw	7
   838   000660  6E16               	movwf	dio_drv_init@position^0,c	;volatile
   839                           
   840                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 112:     switch (dio_drv_pst->cfg_st.
      +                          direction_u1)
   841   000662  EFBE  F003         	goto	l1269
   842   000666                     l1255:
   843   000666  FFFF               	dw	65535	; assembler added errata NOP
   844                           
   845                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 122:                     *dio_reg_dir
      +                          [number] &= ~(1UL << (position));
   846   000668  C016  F00E         	movff	dio_drv_init@position,??_dio_drv_init	;volatile
   847   00066C  0E01               	movlw	1
   848   00066E  6E0F               	movwf	(??_dio_drv_init+1)^0,c
   849   000670  2A0E               	incf	??_dio_drv_init^0,f,c
   850   000672  EF3E  F003         	goto	u614
   851   000676                     u615:
   852   000676  FFFF               	dw	65535	; assembler added errata NOP
   853   000678  90D8               	bcf	status,0,c
   854   00067A  360F               	rlcf	(??_dio_drv_init+1)^0,f,c
   855   00067C                     u614:
   856   00067C  FFFF               	dw	65535	; assembler added errata NOP
   857   00067E  2E0E               	decfsz	??_dio_drv_init^0,f,c
   858   000680  EF3B  F003         	goto	u615
   859   000684  500F               	movf	(??_dio_drv_init+1)^0,w,c
   860   000686  0AFF               	xorlw	255
   861   000688  6E10               	movwf	(??_dio_drv_init+2)^0,c
   862   00068A  5015               	movf	dio_drv_init@number^0,w,c
   863   00068C  0D02               	mullw	2
   864   00068E  50F3               	movf	243,w,c
   865   000690  0F0B               	addlw	low _dio_reg_dir
   866   000692  6E11               	movwf	(??_dio_drv_init+3)^0,c
   867   000694  C011  FFF6         	movff	??_dio_drv_init+3,tblptrl
   868   000698                     	if	1	;There is more than 1 active tblptr byte
   869   000698  0E06               	movlw	high __smallconst
   870   00069A  6EF7               	movwf	tblptrh,c
   871   00069C                     	endif
   872   00069C                     	if	0	;tblptru may be non-zero
   873   00069C                     	endif
   874   00069C                     	if	0	;tblptru may be non-zero
   875   00069C                     	endif
   876   00069C  0009               	tblrd		*+
   877   00069E  FFFF               	dw	65535	; errata NOP
   878   0006A0  CFF5 F012          	movff	tablat,??_dio_drv_init+4
   879   0006A4  0009               	tblrd		*+
   880   0006A6  FFFF               	dw	65535	; errata NOP
   881   0006A8  CFF5 F013          	movff	tablat,??_dio_drv_init+5
   882   0006AC  C012  FFD9         	movff	??_dio_drv_init+4,fsr2l
   883   0006B0  C013  FFDA         	movff	??_dio_drv_init+5,fsr2h
   884   0006B4  5010               	movf	(??_dio_drv_init+2)^0,w,c
   885   0006B6  16DF               	andwf	indf2,f,c
   886                           
   887                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 123:                     break;
   888   0006B8  EFDC  F004         	goto	l1289
   889   0006BC                     l1259:
   890   0006BC  FFFF               	dw	65535	; assembler added errata NOP
   891   0006BE  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
   892   0006C0  6ED9               	movwf	fsr2l,c
   893   0006C2  6ADA               	clrf	fsr2h,c
   894   0006C4  0E0B               	movlw	11
   895   0006C6  26D9               	addwf	fsr2l,f,c
   896   0006C8  30DF               	rrcf	223,w,c
   897   0006CA  32E8               	rrcf	wreg,f,c
   898   0006CC  0B03               	andlw	3
   899   0006CE  6E0E               	movwf	??_dio_drv_init^0,c
   900   0006D0  6A0F               	clrf	(??_dio_drv_init+1)^0,c
   901                           
   902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   903                           ; Switch size 1, requested type "simple"
   904                           ; Number of cases is 1, Range of values is 0 to 0
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte            4     3 (average)
   908                           ;	Chosen strategy is simple_byte
   909   0006D2  500F               	movf	(??_dio_drv_init+1)^0,w,c
   910   0006D4  0A00               	xorlw	0	; case 0
   911   0006D6  B4D8               	btfsc	status,2,c
   912   0006D8  EF70  F003         	goto	l1479
   913   0006DC  EFDC  F004         	goto	l1289
   914   0006E0                     l1479:
   915   0006E0  FFFF               	dw	65535	; assembler added errata NOP
   916                           
   917                           ; Switch size 1, requested type "simple"
   918                           ; Number of cases is 1, Range of values is 0 to 0
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte            4     3 (average)
   922                           ;	Chosen strategy is simple_byte
   923   0006E2  500E               	movf	??_dio_drv_init^0,w,c
   924   0006E4  0A00               	xorlw	0	; case 0
   925   0006E6  B4D8               	btfsc	status,2,c
   926   0006E8  EF33  F003         	goto	l1255
   927   0006EC  EFDC  F004         	goto	l1289
   928   0006F0                     l1261:
   929   0006F0  FFFF               	dw	65535	; assembler added errata NOP
   930                           
   931                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 141:                     *dio_reg_dir
      +                          [number] |= (1UL << (position));
   932   0006F2  C016  F00E         	movff	dio_drv_init@position,??_dio_drv_init	;volatile
   933   0006F6  0E01               	movlw	1
   934   0006F8  6E0F               	movwf	(??_dio_drv_init+1)^0,c
   935   0006FA  2A0E               	incf	??_dio_drv_init^0,f,c
   936   0006FC  EF83  F003         	goto	u624
   937   000700                     u625:
   938   000700  FFFF               	dw	65535	; assembler added errata NOP
   939   000702  90D8               	bcf	status,0,c
   940   000704  360F               	rlcf	(??_dio_drv_init+1)^0,f,c
   941   000706                     u624:
   942   000706  FFFF               	dw	65535	; assembler added errata NOP
   943   000708  2E0E               	decfsz	??_dio_drv_init^0,f,c
   944   00070A  EF80  F003         	goto	u625
   945   00070E  5015               	movf	dio_drv_init@number^0,w,c
   946   000710  0D02               	mullw	2
   947   000712  50F3               	movf	243,w,c
   948   000714  0F0B               	addlw	low _dio_reg_dir
   949   000716  6E10               	movwf	(??_dio_drv_init+2)^0,c
   950   000718  C010  FFF6         	movff	??_dio_drv_init+2,tblptrl
   951   00071C                     	if	1	;There is more than 1 active tblptr byte
   952   00071C  0E06               	movlw	high __smallconst
   953   00071E  6EF7               	movwf	tblptrh,c
   954   000720                     	endif
   955   000720                     	if	0	;tblptru may be non-zero
   956   000720                     	endif
   957   000720                     	if	0	;tblptru may be non-zero
   958   000720                     	endif
   959   000720  0009               	tblrd		*+
   960   000722  FFFF               	dw	65535	; errata NOP
   961   000724  CFF5 F011          	movff	tablat,??_dio_drv_init+3
   962   000728  0009               	tblrd		*+
   963   00072A  FFFF               	dw	65535	; errata NOP
   964   00072C  CFF5 F012          	movff	tablat,??_dio_drv_init+4
   965   000730  C011  FFD9         	movff	??_dio_drv_init+3,fsr2l
   966   000734  C012  FFDA         	movff	??_dio_drv_init+4,fsr2h
   967   000738  500F               	movf	(??_dio_drv_init+1)^0,w,c
   968   00073A  12DF               	iorwf	indf2,f,c
   969                           
   970                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 142:                     break;
   971   00073C  EFDC  F004         	goto	l1289
   972   000740                     l1265:
   973   000740  FFFF               	dw	65535	; assembler added errata NOP
   974   000742  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
   975   000744  6ED9               	movwf	fsr2l,c
   976   000746  6ADA               	clrf	fsr2h,c
   977   000748  0E0B               	movlw	11
   978   00074A  26D9               	addwf	fsr2l,f,c
   979   00074C  30DF               	rrcf	223,w,c
   980   00074E  32E8               	rrcf	wreg,f,c
   981   000750  0B03               	andlw	3
   982   000752  6E0E               	movwf	??_dio_drv_init^0,c
   983   000754  6A0F               	clrf	(??_dio_drv_init+1)^0,c
   984                           
   985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   986                           ; Switch size 1, requested type "simple"
   987                           ; Number of cases is 1, Range of values is 0 to 0
   988                           ; switch strategies available:
   989                           ; Name         Instructions Cycles
   990                           ; simple_byte            4     3 (average)
   991                           ;	Chosen strategy is simple_byte
   992   000756  500F               	movf	(??_dio_drv_init+1)^0,w,c
   993   000758  0A00               	xorlw	0	; case 0
   994   00075A  B4D8               	btfsc	status,2,c
   995   00075C  EFB2  F003         	goto	l1481
   996   000760  EFDC  F004         	goto	l1289
   997   000764                     l1481:
   998   000764  FFFF               	dw	65535	; assembler added errata NOP
   999                           
  1000                           ; Switch size 1, requested type "simple"
  1001                           ; Number of cases is 2, Range of values is 0 to 1
  1002                           ; switch strategies available:
  1003                           ; Name         Instructions Cycles
  1004                           ; simple_byte            7     4 (average)
  1005                           ;	Chosen strategy is simple_byte
  1006   000766  500E               	movf	??_dio_drv_init^0,w,c
  1007   000768  0A00               	xorlw	0	; case 0
  1008   00076A  B4D8               	btfsc	status,2,c
  1009   00076C  EF78  F003         	goto	l1261
  1010   000770  0A01               	xorlw	1	; case 1
  1011   000772  B4D8               	btfsc	status,2,c
  1012   000774  EFE5  F003         	goto	l44
  1013   000778  EFDC  F004         	goto	l1289
  1014   00077C                     l1269:
  1015   00077C  FFFF               	dw	65535	; assembler added errata NOP
  1016   00077E  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
  1017   000780  6ED9               	movwf	fsr2l,c
  1018   000782  6ADA               	clrf	fsr2h,c
  1019   000784  0E0B               	movlw	11
  1020   000786  26D9               	addwf	fsr2l,f,c
  1021   000788  B0DF               	btfsc	indf2,0,c
  1022   00078A  EFC9  F003         	goto	u631
  1023   00078E  EFCD  F003         	goto	u630
  1024   000792                     u631:
  1025   000792  FFFF               	dw	65535	; assembler added errata NOP
  1026   000794  0E01               	movlw	1
  1027   000796  EFCF  F003         	goto	u640
  1028   00079A                     u630:
  1029   00079A  FFFF               	dw	65535	; assembler added errata NOP
  1030   00079C  0E00               	movlw	0
  1031   00079E                     u640:
  1032   00079E  FFFF               	dw	65535	; assembler added errata NOP
  1033   0007A0  6E0E               	movwf	??_dio_drv_init^0,c
  1034   0007A2  6A0F               	clrf	(??_dio_drv_init+1)^0,c
  1035                           
  1036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1037                           ; Switch size 1, requested type "simple"
  1038                           ; Number of cases is 1, Range of values is 0 to 0
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte            4     3 (average)
  1042                           ;	Chosen strategy is simple_byte
  1043   0007A4  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1044   0007A6  0A00               	xorlw	0	; case 0
  1045   0007A8  B4D8               	btfsc	status,2,c
  1046   0007AA  EFD9  F003         	goto	l1483
  1047   0007AE  EFDC  F004         	goto	l1289
  1048   0007B2                     l1483:
  1049   0007B2  FFFF               	dw	65535	; assembler added errata NOP
  1050                           
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 2, Range of values is 0 to 1
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            7     4 (average)
  1056                           ;	Chosen strategy is simple_byte
  1057   0007B4  500E               	movf	??_dio_drv_init^0,w,c
  1058   0007B6  0A00               	xorlw	0	; case 0
  1059   0007B8  B4D8               	btfsc	status,2,c
  1060   0007BA  EF5E  F003         	goto	l1259
  1061   0007BE  0A01               	xorlw	1	; case 1
  1062   0007C0  B4D8               	btfsc	status,2,c
  1063   0007C2  EFA0  F003         	goto	l1265
  1064   0007C6  EFDC  F004         	goto	l1289
  1065   0007CA                     l44:
  1066   0007CA  FFFF               	dw	65535	; assembler added errata NOP
  1067                           
  1068                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 149:     switch (dio_drv_pst->cfg_st.
      +                          state_u1)
  1069   0007CC  EFDC  F004         	goto	l1289
  1070   0007D0                     l1271:
  1071   0007D0  FFFF               	dw	65535	; assembler added errata NOP
  1072                           
  1073                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 155:                     *dio_reg_out
      +                          [number] |= (1UL << (position));
  1074   0007D2  C016  F00E         	movff	dio_drv_init@position,??_dio_drv_init	;volatile
  1075   0007D6  0E01               	movlw	1
  1076   0007D8  6E0F               	movwf	(??_dio_drv_init+1)^0,c
  1077   0007DA  2A0E               	incf	??_dio_drv_init^0,f,c
  1078   0007DC  EFF3  F003         	goto	u654
  1079   0007E0                     u655:
  1080   0007E0  FFFF               	dw	65535	; assembler added errata NOP
  1081   0007E2  90D8               	bcf	status,0,c
  1082   0007E4  360F               	rlcf	(??_dio_drv_init+1)^0,f,c
  1083   0007E6                     u654:
  1084   0007E6  FFFF               	dw	65535	; assembler added errata NOP
  1085   0007E8  2E0E               	decfsz	??_dio_drv_init^0,f,c
  1086   0007EA  EFF0  F003         	goto	u655
  1087   0007EE  5015               	movf	dio_drv_init@number^0,w,c
  1088   0007F0  0D02               	mullw	2
  1089   0007F2  50F3               	movf	243,w,c
  1090   0007F4  0F01               	addlw	low _dio_reg_out
  1091   0007F6  6E10               	movwf	(??_dio_drv_init+2)^0,c
  1092   0007F8  C010  FFF6         	movff	??_dio_drv_init+2,tblptrl
  1093   0007FC                     	if	1	;There is more than 1 active tblptr byte
  1094   0007FC  0E06               	movlw	high __smallconst
  1095   0007FE  6EF7               	movwf	tblptrh,c
  1096   000800                     	endif
  1097   000800                     	if	0	;tblptru may be non-zero
  1098   000800                     	endif
  1099   000800                     	if	0	;tblptru may be non-zero
  1100   000800                     	endif
  1101   000800  0009               	tblrd		*+
  1102   000802  FFFF               	dw	65535	; errata NOP
  1103   000804  CFF5 F011          	movff	tablat,??_dio_drv_init+3
  1104   000808  0009               	tblrd		*+
  1105   00080A  FFFF               	dw	65535	; errata NOP
  1106   00080C  CFF5 F012          	movff	tablat,??_dio_drv_init+4
  1107   000810  C011  FFD9         	movff	??_dio_drv_init+3,fsr2l
  1108   000814  C012  FFDA         	movff	??_dio_drv_init+4,fsr2h
  1109   000818  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1110   00081A  12DF               	iorwf	indf2,f,c
  1111                           
  1112                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 156:                     break;
  1113   00081C  EF03  F005         	goto	l66
  1114   000820                     l1273:
  1115   000820  FFFF               	dw	65535	; assembler added errata NOP
  1116                           
  1117                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 158:                     *dio_reg_out
      +                          [number] &= ~(1UL << (position));
  1118   000822  C016  F00E         	movff	dio_drv_init@position,??_dio_drv_init	;volatile
  1119   000826  0E01               	movlw	1
  1120   000828  6E0F               	movwf	(??_dio_drv_init+1)^0,c
  1121   00082A  2A0E               	incf	??_dio_drv_init^0,f,c
  1122   00082C  EF1B  F004         	goto	u664
  1123   000830                     u665:
  1124   000830  FFFF               	dw	65535	; assembler added errata NOP
  1125   000832  90D8               	bcf	status,0,c
  1126   000834  360F               	rlcf	(??_dio_drv_init+1)^0,f,c
  1127   000836                     u664:
  1128   000836  FFFF               	dw	65535	; assembler added errata NOP
  1129   000838  2E0E               	decfsz	??_dio_drv_init^0,f,c
  1130   00083A  EF18  F004         	goto	u665
  1131   00083E  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1132   000840  0AFF               	xorlw	255
  1133   000842  6E10               	movwf	(??_dio_drv_init+2)^0,c
  1134   000844  5015               	movf	dio_drv_init@number^0,w,c
  1135   000846  0D02               	mullw	2
  1136   000848  50F3               	movf	243,w,c
  1137   00084A  0F01               	addlw	low _dio_reg_out
  1138   00084C  6E11               	movwf	(??_dio_drv_init+3)^0,c
  1139   00084E  C011  FFF6         	movff	??_dio_drv_init+3,tblptrl
  1140   000852                     	if	1	;There is more than 1 active tblptr byte
  1141   000852  0E06               	movlw	high __smallconst
  1142   000854  6EF7               	movwf	tblptrh,c
  1143   000856                     	endif
  1144   000856                     	if	0	;tblptru may be non-zero
  1145   000856                     	endif
  1146   000856                     	if	0	;tblptru may be non-zero
  1147   000856                     	endif
  1148   000856  0009               	tblrd		*+
  1149   000858  FFFF               	dw	65535	; errata NOP
  1150   00085A  CFF5 F012          	movff	tablat,??_dio_drv_init+4
  1151   00085E  0009               	tblrd		*+
  1152   000860  FFFF               	dw	65535	; errata NOP
  1153   000862  CFF5 F013          	movff	tablat,??_dio_drv_init+5
  1154   000866  C012  FFD9         	movff	??_dio_drv_init+4,fsr2l
  1155   00086A  C013  FFDA         	movff	??_dio_drv_init+5,fsr2h
  1156   00086E  5010               	movf	(??_dio_drv_init+2)^0,w,c
  1157   000870  16DF               	andwf	indf2,f,c
  1158                           
  1159                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 159:                     break;
  1160   000872  EF03  F005         	goto	l66
  1161   000876                     l1277:
  1162   000876  FFFF               	dw	65535	; assembler added errata NOP
  1163   000878  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
  1164   00087A  6ED9               	movwf	fsr2l,c
  1165   00087C  6ADA               	clrf	fsr2h,c
  1166   00087E  0E0B               	movlw	11
  1167   000880  26D9               	addwf	fsr2l,f,c
  1168   000882  B2DF               	btfsc	indf2,1,c
  1169   000884  EF46  F004         	goto	u671
  1170   000888  EF4A  F004         	goto	u670
  1171   00088C                     u671:
  1172   00088C  FFFF               	dw	65535	; assembler added errata NOP
  1173   00088E  0E01               	movlw	1
  1174   000890  EF4C  F004         	goto	u680
  1175   000894                     u670:
  1176   000894  FFFF               	dw	65535	; assembler added errata NOP
  1177   000896  0E00               	movlw	0
  1178   000898                     u680:
  1179   000898  FFFF               	dw	65535	; assembler added errata NOP
  1180   00089A  6E0E               	movwf	??_dio_drv_init^0,c
  1181   00089C  6A0F               	clrf	(??_dio_drv_init+1)^0,c
  1182                           
  1183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1184                           ; Switch size 1, requested type "simple"
  1185                           ; Number of cases is 1, Range of values is 0 to 0
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte            4     3 (average)
  1189                           ;	Chosen strategy is simple_byte
  1190   00089E  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1191   0008A0  0A00               	xorlw	0	; case 0
  1192   0008A2  B4D8               	btfsc	status,2,c
  1193   0008A4  EF56  F004         	goto	l1485
  1194   0008A8  EF03  F005         	goto	l66
  1195   0008AC                     l1485:
  1196   0008AC  FFFF               	dw	65535	; assembler added errata NOP
  1197                           
  1198                           ; Switch size 1, requested type "simple"
  1199                           ; Number of cases is 2, Range of values is 0 to 1
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte            7     4 (average)
  1203                           ;	Chosen strategy is simple_byte
  1204   0008AE  500E               	movf	??_dio_drv_init^0,w,c
  1205   0008B0  0A00               	xorlw	0	; case 0
  1206   0008B2  B4D8               	btfsc	status,2,c
  1207   0008B4  EFE8  F003         	goto	l1271
  1208   0008B8  0A01               	xorlw	1	; case 1
  1209   0008BA  B4D8               	btfsc	status,2,c
  1210   0008BC  EF10  F004         	goto	l1273
  1211   0008C0  EF03  F005         	goto	l66
  1212   0008C4                     l1279:
  1213   0008C4  FFFF               	dw	65535	; assembler added errata NOP
  1214                           
  1215                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 168:                     *dio_reg_out
      +                          [number] &= ~(1UL << (position));
  1216   0008C6  C016  F00E         	movff	dio_drv_init@position,??_dio_drv_init	;volatile
  1217   0008CA  0E01               	movlw	1
  1218   0008CC  6E0F               	movwf	(??_dio_drv_init+1)^0,c
  1219   0008CE  2A0E               	incf	??_dio_drv_init^0,f,c
  1220   0008D0  EF6D  F004         	goto	u694
  1221   0008D4                     u695:
  1222   0008D4  FFFF               	dw	65535	; assembler added errata NOP
  1223   0008D6  90D8               	bcf	status,0,c
  1224   0008D8  360F               	rlcf	(??_dio_drv_init+1)^0,f,c
  1225   0008DA                     u694:
  1226   0008DA  FFFF               	dw	65535	; assembler added errata NOP
  1227   0008DC  2E0E               	decfsz	??_dio_drv_init^0,f,c
  1228   0008DE  EF6A  F004         	goto	u695
  1229   0008E2  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1230   0008E4  0AFF               	xorlw	255
  1231   0008E6  6E10               	movwf	(??_dio_drv_init+2)^0,c
  1232   0008E8  5015               	movf	dio_drv_init@number^0,w,c
  1233   0008EA  0D02               	mullw	2
  1234   0008EC  50F3               	movf	243,w,c
  1235   0008EE  0F01               	addlw	low _dio_reg_out
  1236   0008F0  6E11               	movwf	(??_dio_drv_init+3)^0,c
  1237   0008F2  C011  FFF6         	movff	??_dio_drv_init+3,tblptrl
  1238   0008F6                     	if	1	;There is more than 1 active tblptr byte
  1239   0008F6  0E06               	movlw	high __smallconst
  1240   0008F8  6EF7               	movwf	tblptrh,c
  1241   0008FA                     	endif
  1242   0008FA                     	if	0	;tblptru may be non-zero
  1243   0008FA                     	endif
  1244   0008FA                     	if	0	;tblptru may be non-zero
  1245   0008FA                     	endif
  1246   0008FA  0009               	tblrd		*+
  1247   0008FC  FFFF               	dw	65535	; errata NOP
  1248   0008FE  CFF5 F012          	movff	tablat,??_dio_drv_init+4
  1249   000902  0009               	tblrd		*+
  1250   000904  FFFF               	dw	65535	; errata NOP
  1251   000906  CFF5 F013          	movff	tablat,??_dio_drv_init+5
  1252   00090A  C012  FFD9         	movff	??_dio_drv_init+4,fsr2l
  1253   00090E  C013  FFDA         	movff	??_dio_drv_init+5,fsr2h
  1254   000912  5010               	movf	(??_dio_drv_init+2)^0,w,c
  1255   000914  16DF               	andwf	indf2,f,c
  1256                           
  1257                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 169:                     break;
  1258   000916  EF03  F005         	goto	l66
  1259   00091A                     l1281:
  1260   00091A  FFFF               	dw	65535	; assembler added errata NOP
  1261                           
  1262                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 171:                     *dio_reg_out
      +                          [number] |= (1UL << (position));
  1263   00091C  C016  F00E         	movff	dio_drv_init@position,??_dio_drv_init	;volatile
  1264   000920  0E01               	movlw	1
  1265   000922  6E0F               	movwf	(??_dio_drv_init+1)^0,c
  1266   000924  2A0E               	incf	??_dio_drv_init^0,f,c
  1267   000926  EF98  F004         	goto	u704
  1268   00092A                     u705:
  1269   00092A  FFFF               	dw	65535	; assembler added errata NOP
  1270   00092C  90D8               	bcf	status,0,c
  1271   00092E  360F               	rlcf	(??_dio_drv_init+1)^0,f,c
  1272   000930                     u704:
  1273   000930  FFFF               	dw	65535	; assembler added errata NOP
  1274   000932  2E0E               	decfsz	??_dio_drv_init^0,f,c
  1275   000934  EF95  F004         	goto	u705
  1276   000938  5015               	movf	dio_drv_init@number^0,w,c
  1277   00093A  0D02               	mullw	2
  1278   00093C  50F3               	movf	243,w,c
  1279   00093E  0F01               	addlw	low _dio_reg_out
  1280   000940  6E10               	movwf	(??_dio_drv_init+2)^0,c
  1281   000942  C010  FFF6         	movff	??_dio_drv_init+2,tblptrl
  1282   000946                     	if	1	;There is more than 1 active tblptr byte
  1283   000946  0E06               	movlw	high __smallconst
  1284   000948  6EF7               	movwf	tblptrh,c
  1285   00094A                     	endif
  1286   00094A                     	if	0	;tblptru may be non-zero
  1287   00094A                     	endif
  1288   00094A                     	if	0	;tblptru may be non-zero
  1289   00094A                     	endif
  1290   00094A  0009               	tblrd		*+
  1291   00094C  FFFF               	dw	65535	; errata NOP
  1292   00094E  CFF5 F011          	movff	tablat,??_dio_drv_init+3
  1293   000952  0009               	tblrd		*+
  1294   000954  FFFF               	dw	65535	; errata NOP
  1295   000956  CFF5 F012          	movff	tablat,??_dio_drv_init+4
  1296   00095A  C011  FFD9         	movff	??_dio_drv_init+3,fsr2l
  1297   00095E  C012  FFDA         	movff	??_dio_drv_init+4,fsr2h
  1298   000962  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1299   000964  12DF               	iorwf	indf2,f,c
  1300                           
  1301                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 172:                     break;
  1302   000966  EF03  F005         	goto	l66
  1303   00096A                     l1285:
  1304   00096A  FFFF               	dw	65535	; assembler added errata NOP
  1305   00096C  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
  1306   00096E  6ED9               	movwf	fsr2l,c
  1307   000970  6ADA               	clrf	fsr2h,c
  1308   000972  0E0B               	movlw	11
  1309   000974  26D9               	addwf	fsr2l,f,c
  1310   000976  B2DF               	btfsc	indf2,1,c
  1311   000978  EFC0  F004         	goto	u711
  1312   00097C  EFC4  F004         	goto	u710
  1313   000980                     u711:
  1314   000980  FFFF               	dw	65535	; assembler added errata NOP
  1315   000982  0E01               	movlw	1
  1316   000984  EFC6  F004         	goto	u720
  1317   000988                     u710:
  1318   000988  FFFF               	dw	65535	; assembler added errata NOP
  1319   00098A  0E00               	movlw	0
  1320   00098C                     u720:
  1321   00098C  FFFF               	dw	65535	; assembler added errata NOP
  1322   00098E  6E0E               	movwf	??_dio_drv_init^0,c
  1323   000990  6A0F               	clrf	(??_dio_drv_init+1)^0,c
  1324                           
  1325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1326                           ; Switch size 1, requested type "simple"
  1327                           ; Number of cases is 1, Range of values is 0 to 0
  1328                           ; switch strategies available:
  1329                           ; Name         Instructions Cycles
  1330                           ; simple_byte            4     3 (average)
  1331                           ;	Chosen strategy is simple_byte
  1332   000992  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1333   000994  0A00               	xorlw	0	; case 0
  1334   000996  B4D8               	btfsc	status,2,c
  1335   000998  EFD0  F004         	goto	l1487
  1336   00099C  EF03  F005         	goto	l66
  1337   0009A0                     l1487:
  1338   0009A0  FFFF               	dw	65535	; assembler added errata NOP
  1339                           
  1340                           ; Switch size 1, requested type "simple"
  1341                           ; Number of cases is 2, Range of values is 0 to 1
  1342                           ; switch strategies available:
  1343                           ; Name         Instructions Cycles
  1344                           ; simple_byte            7     4 (average)
  1345                           ;	Chosen strategy is simple_byte
  1346   0009A2  500E               	movf	??_dio_drv_init^0,w,c
  1347   0009A4  0A00               	xorlw	0	; case 0
  1348   0009A6  B4D8               	btfsc	status,2,c
  1349   0009A8  EF62  F004         	goto	l1279
  1350   0009AC  0A01               	xorlw	1	; case 1
  1351   0009AE  B4D8               	btfsc	status,2,c
  1352   0009B0  EF8D  F004         	goto	l1281
  1353   0009B4  EF03  F005         	goto	l66
  1354   0009B8                     l1289:
  1355   0009B8  FFFF               	dw	65535	; assembler added errata NOP
  1356   0009BA  5014               	movf	dio_drv_init@dio_drv_pst^0,w,c
  1357   0009BC  6ED9               	movwf	fsr2l,c
  1358   0009BE  6ADA               	clrf	fsr2h,c
  1359   0009C0  0E0B               	movlw	11
  1360   0009C2  26D9               	addwf	fsr2l,f,c
  1361   0009C4  BCDF               	btfsc	indf2,6,c
  1362   0009C6  EFE7  F004         	goto	u731
  1363   0009CA  EFEB  F004         	goto	u730
  1364   0009CE                     u731:
  1365   0009CE  FFFF               	dw	65535	; assembler added errata NOP
  1366   0009D0  0E01               	movlw	1
  1367   0009D2  EFED  F004         	goto	u740
  1368   0009D6                     u730:
  1369   0009D6  FFFF               	dw	65535	; assembler added errata NOP
  1370   0009D8  0E00               	movlw	0
  1371   0009DA                     u740:
  1372   0009DA  FFFF               	dw	65535	; assembler added errata NOP
  1373   0009DC  6E0E               	movwf	??_dio_drv_init^0,c
  1374   0009DE  6A0F               	clrf	(??_dio_drv_init+1)^0,c
  1375                           
  1376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1377                           ; Switch size 1, requested type "simple"
  1378                           ; Number of cases is 1, Range of values is 0 to 0
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte            4     3 (average)
  1382                           ;	Chosen strategy is simple_byte
  1383   0009E0  500F               	movf	(??_dio_drv_init+1)^0,w,c
  1384   0009E2  0A00               	xorlw	0	; case 0
  1385   0009E4  B4D8               	btfsc	status,2,c
  1386   0009E6  EFF7  F004         	goto	l1489
  1387   0009EA  EF03  F005         	goto	l66
  1388   0009EE                     l1489:
  1389   0009EE  FFFF               	dw	65535	; assembler added errata NOP
  1390                           
  1391                           ; Switch size 1, requested type "simple"
  1392                           ; Number of cases is 2, Range of values is 0 to 1
  1393                           ; switch strategies available:
  1394                           ; Name         Instructions Cycles
  1395                           ; simple_byte            7     4 (average)
  1396                           ;	Chosen strategy is simple_byte
  1397   0009F0  500E               	movf	??_dio_drv_init^0,w,c
  1398   0009F2  0A00               	xorlw	0	; case 0
  1399   0009F4  B4D8               	btfsc	status,2,c
  1400   0009F6  EFB5  F004         	goto	l1285
  1401   0009FA  0A01               	xorlw	1	; case 1
  1402   0009FC  B4D8               	btfsc	status,2,c
  1403   0009FE  EF3B  F004         	goto	l1277
  1404   000A02  EF03  F005         	goto	l66
  1405   000A06                     l66:
  1406   000A06  FFFF               	dw	65535	; assembler added errata NOP
  1407   000A08  0012               	return		;funcret
  1408   000A0A  FFFF               	dw	65535	; errata NOP
  1409   000A0C                     __end_of_dio_drv_init:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _led_toggle *****************
  1413 ;; Defined at:
  1414 ;;		line 32 in file "../app/src/main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1428 ;;      Params:         0       0       0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0
  1430 ;;      Temps:          1       0       0       0       0       0       0
  1431 ;;      Totals:         1       0       0       0       0       0       0
  1432 ;;Total ram usage:        1 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 4
  1435 ;; This function calls:
  1436 ;;		NULL
  1437 ;;		_dio_drv_set
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text6
  1444   000DA2                     __ptext6:
  1445                           	callstack 0
  1446   000DA2                     _led_toggle:
  1447                           	callstack 0
  1448   000DA2  FFFF               	dw	65535	; assembler added errata NOP
  1449   000DA4                     
  1450                           ;../app/src/main.c: 34:     static uint8_t i;;../app/src/main.c: 35:     if(i++ % 2)
  1451   000DA4  2A1D               	incf	led_toggle@i^0,f,c
  1452   000DA6  041D               	decf	led_toggle@i^0,w,c
  1453   000DA8  6E1A               	movwf	??_led_toggle^0,c
  1454   000DAA  A01A               	btfss	??_led_toggle^0,0,c
  1455   000DAC  EFDA  F006         	goto	u871
  1456   000DB0  EFDD  F006         	goto	u870
  1457   000DB4                     u871:
  1458   000DB4  FFFF               	dw	65535	; assembler added errata NOP
  1459   000DB6  EFFC  F006         	goto	l1383
  1460   000DBA                     u870:
  1461   000DBA  FFFF               	dw	65535	; assembler added errata NOP
  1462   000DBC                     
  1463                           ;../app/src/main.c: 36:     {;../app/src/main.c: 37:         led_out_pst->set(led_out_ps
      +                          t, 0);
  1464   000DBC  C01B  F00D         	movff	_led_out_pst,dio_drv_set@self
  1465   000DC0  C01C  F00E         	movff	_led_out_pst+1,dio_drv_set@self+1
  1466   000DC4  0E00               	movlw	0
  1467   000DC6  6E0F               	movwf	dio_drv_set@state_b^0,c
  1468   000DC8  EE20 F002          	lfsr	2,2
  1469   000DCC  501B               	movf	_led_out_pst^0,w,c
  1470   000DCE  26D9               	addwf	fsr2l,f,c
  1471   000DD0  501C               	movf	(_led_out_pst+1)^0,w,c
  1472   000DD2  22DA               	addwfc	fsr2h,f,c
  1473   000DD4  D802               	call	u888
  1474   000DD6  EFF9  F006         	goto	u889
  1475   000DDA                     u888:
  1476   000DDA  FFFF               	dw	65535	; assembler added errata NOP
  1477   000DDC  0005               	push	
  1478   000DDE  6EFA               	movwf	pclath,c
  1479   000DE0  50DE               	movf	postinc2,w,c
  1480   000DE2  6EFD               	movwf	tosl,c
  1481   000DE4  50DE               	movf	postinc2,w,c
  1482   000DE6  6EFE               	movwf	tosh,c
  1483   000DE8  50F8               	movf	tblptru,w,c
  1484   000DEA  6EFF               	movwf	tosu,c
  1485   000DEC  50FA               	movf	pclath,w,c
  1486   000DEE  0012               	return		;indir
  1487   000DF0  FFFF               	dw	65535	; errata NOP
  1488   000DF2                     u889:
  1489   000DF2  FFFF               	dw	65535	; assembler added errata NOP
  1490                           
  1491                           ;../app/src/main.c: 39:     }
  1492   000DF4  EF18  F007         	goto	l186
  1493   000DF8                     l1383:
  1494   000DF8  FFFF               	dw	65535	; assembler added errata NOP
  1495                           
  1496                           ;../app/src/main.c: 41:     {;../app/src/main.c: 42:         led_out_pst->set(led_out_ps
      +                          t, 1);
  1497   000DFA  C01B  F00D         	movff	_led_out_pst,dio_drv_set@self
  1498   000DFE  C01C  F00E         	movff	_led_out_pst+1,dio_drv_set@self+1
  1499   000E02  0E01               	movlw	1
  1500   000E04  6E0F               	movwf	dio_drv_set@state_b^0,c
  1501   000E06  EE20 F002          	lfsr	2,2
  1502   000E0A  501B               	movf	_led_out_pst^0,w,c
  1503   000E0C  26D9               	addwf	fsr2l,f,c
  1504   000E0E  501C               	movf	(_led_out_pst+1)^0,w,c
  1505   000E10  22DA               	addwfc	fsr2h,f,c
  1506   000E12  D802               	call	u898
  1507   000E14  EF18  F007         	goto	u899
  1508   000E18                     u898:
  1509   000E18  FFFF               	dw	65535	; assembler added errata NOP
  1510   000E1A  0005               	push	
  1511   000E1C  6EFA               	movwf	pclath,c
  1512   000E1E  50DE               	movf	postinc2,w,c
  1513   000E20  6EFD               	movwf	tosl,c
  1514   000E22  50DE               	movf	postinc2,w,c
  1515   000E24  6EFE               	movwf	tosh,c
  1516   000E26  50F8               	movf	tblptru,w,c
  1517   000E28  6EFF               	movwf	tosu,c
  1518   000E2A  50FA               	movf	pclath,w,c
  1519   000E2C  0012               	return		;indir
  1520   000E2E  FFFF               	dw	65535	; errata NOP
  1521   000E30                     u899:
  1522   000E30                     l186:
  1523   000E30  FFFF               	dw	65535	; assembler added errata NOP
  1524   000E32  0012               	return		;funcret
  1525   000E34  FFFF               	dw	65535	; errata NOP
  1526   000E36                     __end_of_led_toggle:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function _dio_drv_set *****************
  1530 ;; Defined at:
  1531 ;;		line 183 in file "../drivers/microchip/PIC18F452/dio/src/dio_drv.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  self            2   12[COMRAM] PTR struct dio_if_tst
  1534 ;;		 -> NULL(0), led_out_st$super(11), led_out_st(21), 
  1535 ;;  state_b         1   14[COMRAM] _Bool 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  dio_drv_pst     2   21[COMRAM] PTR struct dio_drv_st
  1538 ;;		 -> NULL(0), led_out_st$super(11), led_out_st(21), 
  1539 ;;  position        1   24[COMRAM] volatile unsigned char 
  1540 ;;  number          1   23[COMRAM] volatile unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         3       0       0       0       0       0       0
  1551 ;;      Locals:         4       0       0       0       0       0       0
  1552 ;;      Temps:          6       0       0       0       0       0       0
  1553 ;;      Totals:        13       0       0       0       0       0       0
  1554 ;;Total ram usage:       13 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 3
  1557 ;; This function calls:
  1558 ;;		___awdiv
  1559 ;; This function is called by:
  1560 ;;		_init_dio_drv
  1561 ;;		_led_toggle
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text7
  1567   000A0C                     __ptext7:
  1568                           	callstack 0
  1569   000A0C                     _dio_drv_set:
  1570                           	callstack 26
  1571   000A0C  FFFF               	dw	65535	; assembler added errata NOP
  1572                           
  1573                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 183: static void dio_drv_set(dio_if_t
      +                          st *self, _Bool state_b);../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 184: {;../dri
      +                          vers/microchip/PIC18F452/dio/src/dio_drv.c: 185:     dio_drv_tst *dio_drv_pst = (dio_drv
      +                          _tst *)self;
  1574   000A0E  C00D  F016         	movff	dio_drv_set@self,dio_drv_set@dio_drv_pst
  1575   000A12  C00E  F017         	movff	dio_drv_set@self+1,dio_drv_set@dio_drv_pst+1
  1576   000A16                     
  1577                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 186:     dio_drv_pst->cfg_st.state_u1
      +                           = state_b;
  1578   000A16  EE20 F00B          	lfsr	2,11
  1579   000A1A  5016               	movf	dio_drv_set@dio_drv_pst^0,w,c
  1580   000A1C  26D9               	addwf	fsr2l,f,c
  1581   000A1E  5017               	movf	(dio_drv_set@dio_drv_pst+1)^0,w,c
  1582   000A20  22DA               	addwfc	fsr2h,f,c
  1583   000A22  B00F               	btfsc	dio_drv_set@state_b^0,0,c
  1584   000A24  D002               	bra	u765
  1585   000A26  9CDF               	bcf	indf2,6,c
  1586   000A28  D001               	bra	u766
  1587   000A2A                     u765:
  1588   000A2A  8CDF               	bsf	indf2,6,c
  1589   000A2C                     u766:
  1590   000A2C                     
  1591                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 187:     volatile uint8_t number = 0;
  1592   000A2C  0E00               	movlw	0
  1593   000A2E  6E18               	movwf	dio_drv_set@number^0,c	;volatile
  1594   000A30                     
  1595                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 188:     volatile uint8_t position = 
      +                          0;
  1596   000A30  0E00               	movlw	0
  1597   000A32  6E19               	movwf	dio_drv_set@position^0,c	;volatile
  1598   000A34                     
  1599                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 190:     number = dio_drv_pst->cfg_st
      +                          .pin_u8 / (8);
  1600   000A34  EE20 F00C          	lfsr	2,12
  1601   000A38  5016               	movf	dio_drv_set@dio_drv_pst^0,w,c
  1602   000A3A  26D9               	addwf	fsr2l,f,c
  1603   000A3C  5017               	movf	(dio_drv_set@dio_drv_pst+1)^0,w,c
  1604   000A3E  22DA               	addwfc	fsr2h,f,c
  1605   000A40  50DF               	movf	indf2,w,c
  1606   000A42  6E10               	movwf	??_dio_drv_set^0,c
  1607   000A44  5010               	movf	??_dio_drv_set^0,w,c
  1608   000A46  6E05               	movwf	___awdiv@dividend^0,c
  1609   000A48  6A06               	clrf	(___awdiv@dividend+1)^0,c
  1610   000A4A  0E00               	movlw	0
  1611   000A4C  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1612   000A4E  0E08               	movlw	8
  1613   000A50  6E07               	movwf	___awdiv@divisor^0,c
  1614   000A52  EC59  F006         	call	___awdiv	;wreg free
  1615   000A56  5005               	movf	?___awdiv^0,w,c
  1616   000A58  6E18               	movwf	dio_drv_set@number^0,c	;volatile
  1617   000A5A                     
  1618                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 191:     position = dio_drv_pst->cfg_
      +                          st.pin_u8 % (8);
  1619   000A5A  EE20 F00C          	lfsr	2,12
  1620   000A5E  5016               	movf	dio_drv_set@dio_drv_pst^0,w,c
  1621   000A60  26D9               	addwf	fsr2l,f,c
  1622   000A62  5017               	movf	(dio_drv_set@dio_drv_pst+1)^0,w,c
  1623   000A64  22DA               	addwfc	fsr2h,f,c
  1624   000A66  50DF               	movf	indf2,w,c
  1625   000A68  0B07               	andlw	7
  1626   000A6A  6E19               	movwf	dio_drv_set@position^0,c	;volatile
  1627                           
  1628                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 193:     switch (dio_drv_pst->cfg_st.
      +                          state_u1)
  1629   000A6C  EF2E  F006         	goto	l1357
  1630   000A70                     l1339:
  1631   000A70  FFFF               	dw	65535	; assembler added errata NOP
  1632                           
  1633                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 199:                     *dio_reg_out
      +                          [number] |= (1UL << (position));
  1634   000A72  C019  F010         	movff	dio_drv_set@position,??_dio_drv_set	;volatile
  1635   000A76  0E01               	movlw	1
  1636   000A78  6E11               	movwf	(??_dio_drv_set+1)^0,c
  1637   000A7A  2A10               	incf	??_dio_drv_set^0,f,c
  1638   000A7C  EF43  F005         	goto	u774
  1639   000A80                     u775:
  1640   000A80  FFFF               	dw	65535	; assembler added errata NOP
  1641   000A82  90D8               	bcf	status,0,c
  1642   000A84  3611               	rlcf	(??_dio_drv_set+1)^0,f,c
  1643   000A86                     u774:
  1644   000A86  FFFF               	dw	65535	; assembler added errata NOP
  1645   000A88  2E10               	decfsz	??_dio_drv_set^0,f,c
  1646   000A8A  EF40  F005         	goto	u775
  1647   000A8E  5018               	movf	dio_drv_set@number^0,w,c
  1648   000A90  0D02               	mullw	2
  1649   000A92  50F3               	movf	243,w,c
  1650   000A94  0F01               	addlw	low _dio_reg_out
  1651   000A96  6E12               	movwf	(??_dio_drv_set+2)^0,c
  1652   000A98  C012  FFF6         	movff	??_dio_drv_set+2,tblptrl
  1653   000A9C                     	if	1	;There is more than 1 active tblptr byte
  1654   000A9C  0E06               	movlw	high __smallconst
  1655   000A9E  6EF7               	movwf	tblptrh,c
  1656   000AA0                     	endif
  1657   000AA0                     	if	0	;tblptru may be non-zero
  1658   000AA0                     	endif
  1659   000AA0                     	if	0	;tblptru may be non-zero
  1660   000AA0                     	endif
  1661   000AA0  0009               	tblrd		*+
  1662   000AA2  FFFF               	dw	65535	; errata NOP
  1663   000AA4  CFF5 F013          	movff	tablat,??_dio_drv_set+3
  1664   000AA8  0009               	tblrd		*+
  1665   000AAA  FFFF               	dw	65535	; errata NOP
  1666   000AAC  CFF5 F014          	movff	tablat,??_dio_drv_set+4
  1667   000AB0  C013  FFD9         	movff	??_dio_drv_set+3,fsr2l
  1668   000AB4  C014  FFDA         	movff	??_dio_drv_set+4,fsr2h
  1669   000AB8  5011               	movf	(??_dio_drv_set+1)^0,w,c
  1670   000ABA  12DF               	iorwf	indf2,f,c
  1671                           
  1672                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 200:                     break;
  1673   000ABC  EF56  F006         	goto	l84
  1674   000AC0                     l1341:
  1675   000AC0  FFFF               	dw	65535	; assembler added errata NOP
  1676                           
  1677                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 202:                     *dio_reg_out
      +                          [number] &= ~(1UL << (position));
  1678   000AC2  C019  F010         	movff	dio_drv_set@position,??_dio_drv_set	;volatile
  1679   000AC6  0E01               	movlw	1
  1680   000AC8  6E11               	movwf	(??_dio_drv_set+1)^0,c
  1681   000ACA  2A10               	incf	??_dio_drv_set^0,f,c
  1682   000ACC  EF6B  F005         	goto	u784
  1683   000AD0                     u785:
  1684   000AD0  FFFF               	dw	65535	; assembler added errata NOP
  1685   000AD2  90D8               	bcf	status,0,c
  1686   000AD4  3611               	rlcf	(??_dio_drv_set+1)^0,f,c
  1687   000AD6                     u784:
  1688   000AD6  FFFF               	dw	65535	; assembler added errata NOP
  1689   000AD8  2E10               	decfsz	??_dio_drv_set^0,f,c
  1690   000ADA  EF68  F005         	goto	u785
  1691   000ADE  5011               	movf	(??_dio_drv_set+1)^0,w,c
  1692   000AE0  0AFF               	xorlw	255
  1693   000AE2  6E12               	movwf	(??_dio_drv_set+2)^0,c
  1694   000AE4  5018               	movf	dio_drv_set@number^0,w,c
  1695   000AE6  0D02               	mullw	2
  1696   000AE8  50F3               	movf	243,w,c
  1697   000AEA  0F01               	addlw	low _dio_reg_out
  1698   000AEC  6E13               	movwf	(??_dio_drv_set+3)^0,c
  1699   000AEE  C013  FFF6         	movff	??_dio_drv_set+3,tblptrl
  1700   000AF2                     	if	1	;There is more than 1 active tblptr byte
  1701   000AF2  0E06               	movlw	high __smallconst
  1702   000AF4  6EF7               	movwf	tblptrh,c
  1703   000AF6                     	endif
  1704   000AF6                     	if	0	;tblptru may be non-zero
  1705   000AF6                     	endif
  1706   000AF6                     	if	0	;tblptru may be non-zero
  1707   000AF6                     	endif
  1708   000AF6  0009               	tblrd		*+
  1709   000AF8  FFFF               	dw	65535	; errata NOP
  1710   000AFA  CFF5 F014          	movff	tablat,??_dio_drv_set+4
  1711   000AFE  0009               	tblrd		*+
  1712   000B00  FFFF               	dw	65535	; errata NOP
  1713   000B02  CFF5 F015          	movff	tablat,??_dio_drv_set+5
  1714   000B06  C014  FFD9         	movff	??_dio_drv_set+4,fsr2l
  1715   000B0A  C015  FFDA         	movff	??_dio_drv_set+5,fsr2h
  1716   000B0E  5012               	movf	(??_dio_drv_set+2)^0,w,c
  1717   000B10  16DF               	andwf	indf2,f,c
  1718                           
  1719                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 203:                     break;
  1720   000B12  EF56  F006         	goto	l84
  1721   000B16                     l1345:
  1722   000B16  FFFF               	dw	65535	; assembler added errata NOP
  1723   000B18  EE20 F00B          	lfsr	2,11
  1724   000B1C  5016               	movf	dio_drv_set@dio_drv_pst^0,w,c
  1725   000B1E  26D9               	addwf	fsr2l,f,c
  1726   000B20  5017               	movf	(dio_drv_set@dio_drv_pst+1)^0,w,c
  1727   000B22  22DA               	addwfc	fsr2h,f,c
  1728   000B24  B2DF               	btfsc	indf2,1,c
  1729   000B26  EF97  F005         	goto	u791
  1730   000B2A  EF9B  F005         	goto	u790
  1731   000B2E                     u791:
  1732   000B2E  FFFF               	dw	65535	; assembler added errata NOP
  1733   000B30  0E01               	movlw	1
  1734   000B32  EF9D  F005         	goto	u800
  1735   000B36                     u790:
  1736   000B36  FFFF               	dw	65535	; assembler added errata NOP
  1737   000B38  0E00               	movlw	0
  1738   000B3A                     u800:
  1739   000B3A  FFFF               	dw	65535	; assembler added errata NOP
  1740   000B3C  6E10               	movwf	??_dio_drv_set^0,c
  1741   000B3E  6A11               	clrf	(??_dio_drv_set+1)^0,c
  1742                           
  1743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1744                           ; Switch size 1, requested type "simple"
  1745                           ; Number of cases is 1, Range of values is 0 to 0
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte            4     3 (average)
  1749                           ;	Chosen strategy is simple_byte
  1750   000B40  5011               	movf	(??_dio_drv_set+1)^0,w,c
  1751   000B42  0A00               	xorlw	0	; case 0
  1752   000B44  B4D8               	btfsc	status,2,c
  1753   000B46  EFA7  F005         	goto	l1491
  1754   000B4A  EF56  F006         	goto	l84
  1755   000B4E                     l1491:
  1756   000B4E  FFFF               	dw	65535	; assembler added errata NOP
  1757                           
  1758                           ; Switch size 1, requested type "simple"
  1759                           ; Number of cases is 2, Range of values is 0 to 1
  1760                           ; switch strategies available:
  1761                           ; Name         Instructions Cycles
  1762                           ; simple_byte            7     4 (average)
  1763                           ;	Chosen strategy is simple_byte
  1764   000B50  5010               	movf	??_dio_drv_set^0,w,c
  1765   000B52  0A00               	xorlw	0	; case 0
  1766   000B54  B4D8               	btfsc	status,2,c
  1767   000B56  EF38  F005         	goto	l1339
  1768   000B5A  0A01               	xorlw	1	; case 1
  1769   000B5C  B4D8               	btfsc	status,2,c
  1770   000B5E  EF60  F005         	goto	l1341
  1771   000B62  EF56  F006         	goto	l84
  1772   000B66                     l1347:
  1773   000B66  FFFF               	dw	65535	; assembler added errata NOP
  1774                           
  1775                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 212:                     *dio_reg_out
      +                          [number] &= ~(1UL << (position));
  1776   000B68  C019  F010         	movff	dio_drv_set@position,??_dio_drv_set	;volatile
  1777   000B6C  0E01               	movlw	1
  1778   000B6E  6E11               	movwf	(??_dio_drv_set+1)^0,c
  1779   000B70  2A10               	incf	??_dio_drv_set^0,f,c
  1780   000B72  EFBE  F005         	goto	u814
  1781   000B76                     u815:
  1782   000B76  FFFF               	dw	65535	; assembler added errata NOP
  1783   000B78  90D8               	bcf	status,0,c
  1784   000B7A  3611               	rlcf	(??_dio_drv_set+1)^0,f,c
  1785   000B7C                     u814:
  1786   000B7C  FFFF               	dw	65535	; assembler added errata NOP
  1787   000B7E  2E10               	decfsz	??_dio_drv_set^0,f,c
  1788   000B80  EFBB  F005         	goto	u815
  1789   000B84  5011               	movf	(??_dio_drv_set+1)^0,w,c
  1790   000B86  0AFF               	xorlw	255
  1791   000B88  6E12               	movwf	(??_dio_drv_set+2)^0,c
  1792   000B8A  5018               	movf	dio_drv_set@number^0,w,c
  1793   000B8C  0D02               	mullw	2
  1794   000B8E  50F3               	movf	243,w,c
  1795   000B90  0F01               	addlw	low _dio_reg_out
  1796   000B92  6E13               	movwf	(??_dio_drv_set+3)^0,c
  1797   000B94  C013  FFF6         	movff	??_dio_drv_set+3,tblptrl
  1798   000B98                     	if	1	;There is more than 1 active tblptr byte
  1799   000B98  0E06               	movlw	high __smallconst
  1800   000B9A  6EF7               	movwf	tblptrh,c
  1801   000B9C                     	endif
  1802   000B9C                     	if	0	;tblptru may be non-zero
  1803   000B9C                     	endif
  1804   000B9C                     	if	0	;tblptru may be non-zero
  1805   000B9C                     	endif
  1806   000B9C  0009               	tblrd		*+
  1807   000B9E  FFFF               	dw	65535	; errata NOP
  1808   000BA0  CFF5 F014          	movff	tablat,??_dio_drv_set+4
  1809   000BA4  0009               	tblrd		*+
  1810   000BA6  FFFF               	dw	65535	; errata NOP
  1811   000BA8  CFF5 F015          	movff	tablat,??_dio_drv_set+5
  1812   000BAC  C014  FFD9         	movff	??_dio_drv_set+4,fsr2l
  1813   000BB0  C015  FFDA         	movff	??_dio_drv_set+5,fsr2h
  1814   000BB4  5012               	movf	(??_dio_drv_set+2)^0,w,c
  1815   000BB6  16DF               	andwf	indf2,f,c
  1816                           
  1817                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 213:                     break;
  1818   000BB8  EF56  F006         	goto	l84
  1819   000BBC                     l1349:
  1820   000BBC  FFFF               	dw	65535	; assembler added errata NOP
  1821                           
  1822                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 215:                     *dio_reg_out
      +                          [number] |= (1UL << (position));
  1823   000BBE  C019  F010         	movff	dio_drv_set@position,??_dio_drv_set	;volatile
  1824   000BC2  0E01               	movlw	1
  1825   000BC4  6E11               	movwf	(??_dio_drv_set+1)^0,c
  1826   000BC6  2A10               	incf	??_dio_drv_set^0,f,c
  1827   000BC8  EFE9  F005         	goto	u824
  1828   000BCC                     u825:
  1829   000BCC  FFFF               	dw	65535	; assembler added errata NOP
  1830   000BCE  90D8               	bcf	status,0,c
  1831   000BD0  3611               	rlcf	(??_dio_drv_set+1)^0,f,c
  1832   000BD2                     u824:
  1833   000BD2  FFFF               	dw	65535	; assembler added errata NOP
  1834   000BD4  2E10               	decfsz	??_dio_drv_set^0,f,c
  1835   000BD6  EFE6  F005         	goto	u825
  1836   000BDA  5018               	movf	dio_drv_set@number^0,w,c
  1837   000BDC  0D02               	mullw	2
  1838   000BDE  50F3               	movf	243,w,c
  1839   000BE0  0F01               	addlw	low _dio_reg_out
  1840   000BE2  6E12               	movwf	(??_dio_drv_set+2)^0,c
  1841   000BE4  C012  FFF6         	movff	??_dio_drv_set+2,tblptrl
  1842   000BE8                     	if	1	;There is more than 1 active tblptr byte
  1843   000BE8  0E06               	movlw	high __smallconst
  1844   000BEA  6EF7               	movwf	tblptrh,c
  1845   000BEC                     	endif
  1846   000BEC                     	if	0	;tblptru may be non-zero
  1847   000BEC                     	endif
  1848   000BEC                     	if	0	;tblptru may be non-zero
  1849   000BEC                     	endif
  1850   000BEC  0009               	tblrd		*+
  1851   000BEE  FFFF               	dw	65535	; errata NOP
  1852   000BF0  CFF5 F013          	movff	tablat,??_dio_drv_set+3
  1853   000BF4  0009               	tblrd		*+
  1854   000BF6  FFFF               	dw	65535	; errata NOP
  1855   000BF8  CFF5 F014          	movff	tablat,??_dio_drv_set+4
  1856   000BFC  C013  FFD9         	movff	??_dio_drv_set+3,fsr2l
  1857   000C00  C014  FFDA         	movff	??_dio_drv_set+4,fsr2h
  1858   000C04  5011               	movf	(??_dio_drv_set+1)^0,w,c
  1859   000C06  12DF               	iorwf	indf2,f,c
  1860                           
  1861                           ;../drivers/microchip/PIC18F452/dio/src/dio_drv.c: 216:                     break;
  1862   000C08  EF56  F006         	goto	l84
  1863   000C0C                     l1353:
  1864   000C0C  FFFF               	dw	65535	; assembler added errata NOP
  1865   000C0E  EE20 F00B          	lfsr	2,11
  1866   000C12  5016               	movf	dio_drv_set@dio_drv_pst^0,w,c
  1867   000C14  26D9               	addwf	fsr2l,f,c
  1868   000C16  5017               	movf	(dio_drv_set@dio_drv_pst+1)^0,w,c
  1869   000C18  22DA               	addwfc	fsr2h,f,c
  1870   000C1A  B2DF               	btfsc	indf2,1,c
  1871   000C1C  EF12  F006         	goto	u831
  1872   000C20  EF16  F006         	goto	u830
  1873   000C24                     u831:
  1874   000C24  FFFF               	dw	65535	; assembler added errata NOP
  1875   000C26  0E01               	movlw	1
  1876   000C28  EF18  F006         	goto	u840
  1877   000C2C                     u830:
  1878   000C2C  FFFF               	dw	65535	; assembler added errata NOP
  1879   000C2E  0E00               	movlw	0
  1880   000C30                     u840:
  1881   000C30  FFFF               	dw	65535	; assembler added errata NOP
  1882   000C32  6E10               	movwf	??_dio_drv_set^0,c
  1883   000C34  6A11               	clrf	(??_dio_drv_set+1)^0,c
  1884                           
  1885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 1, Range of values is 0 to 0
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte            4     3 (average)
  1891                           ;	Chosen strategy is simple_byte
  1892   000C36  5011               	movf	(??_dio_drv_set+1)^0,w,c
  1893   000C38  0A00               	xorlw	0	; case 0
  1894   000C3A  B4D8               	btfsc	status,2,c
  1895   000C3C  EF22  F006         	goto	l1493
  1896   000C40  EF56  F006         	goto	l84
  1897   000C44                     l1493:
  1898   000C44  FFFF               	dw	65535	; assembler added errata NOP
  1899                           
  1900                           ; Switch size 1, requested type "simple"
  1901                           ; Number of cases is 2, Range of values is 0 to 1
  1902                           ; switch strategies available:
  1903                           ; Name         Instructions Cycles
  1904                           ; simple_byte            7     4 (average)
  1905                           ;	Chosen strategy is simple_byte
  1906   000C46  5010               	movf	??_dio_drv_set^0,w,c
  1907   000C48  0A00               	xorlw	0	; case 0
  1908   000C4A  B4D8               	btfsc	status,2,c
  1909   000C4C  EFB3  F005         	goto	l1347
  1910   000C50  0A01               	xorlw	1	; case 1
  1911   000C52  B4D8               	btfsc	status,2,c
  1912   000C54  EFDE  F005         	goto	l1349
  1913   000C58  EF56  F006         	goto	l84
  1914   000C5C                     l1357:
  1915   000C5C  FFFF               	dw	65535	; assembler added errata NOP
  1916   000C5E  EE20 F00B          	lfsr	2,11
  1917   000C62  5016               	movf	dio_drv_set@dio_drv_pst^0,w,c
  1918   000C64  26D9               	addwf	fsr2l,f,c
  1919   000C66  5017               	movf	(dio_drv_set@dio_drv_pst+1)^0,w,c
  1920   000C68  22DA               	addwfc	fsr2h,f,c
  1921   000C6A  BCDF               	btfsc	indf2,6,c
  1922   000C6C  EF3A  F006         	goto	u851
  1923   000C70  EF3E  F006         	goto	u850
  1924   000C74                     u851:
  1925   000C74  FFFF               	dw	65535	; assembler added errata NOP
  1926   000C76  0E01               	movlw	1
  1927   000C78  EF40  F006         	goto	u860
  1928   000C7C                     u850:
  1929   000C7C  FFFF               	dw	65535	; assembler added errata NOP
  1930   000C7E  0E00               	movlw	0
  1931   000C80                     u860:
  1932   000C80  FFFF               	dw	65535	; assembler added errata NOP
  1933   000C82  6E10               	movwf	??_dio_drv_set^0,c
  1934   000C84  6A11               	clrf	(??_dio_drv_set+1)^0,c
  1935                           
  1936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 1, Range of values is 0 to 0
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte            4     3 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943   000C86  5011               	movf	(??_dio_drv_set+1)^0,w,c
  1944   000C88  0A00               	xorlw	0	; case 0
  1945   000C8A  B4D8               	btfsc	status,2,c
  1946   000C8C  EF4A  F006         	goto	l1495
  1947   000C90  EF56  F006         	goto	l84
  1948   000C94                     l1495:
  1949   000C94  FFFF               	dw	65535	; assembler added errata NOP
  1950                           
  1951                           ; Switch size 1, requested type "simple"
  1952                           ; Number of cases is 2, Range of values is 0 to 1
  1953                           ; switch strategies available:
  1954                           ; Name         Instructions Cycles
  1955                           ; simple_byte            7     4 (average)
  1956                           ;	Chosen strategy is simple_byte
  1957   000C96  5010               	movf	??_dio_drv_set^0,w,c
  1958   000C98  0A00               	xorlw	0	; case 0
  1959   000C9A  B4D8               	btfsc	status,2,c
  1960   000C9C  EF06  F006         	goto	l1353
  1961   000CA0  0A01               	xorlw	1	; case 1
  1962   000CA2  B4D8               	btfsc	status,2,c
  1963   000CA4  EF8B  F005         	goto	l1345
  1964   000CA8  EF56  F006         	goto	l84
  1965   000CAC                     l84:
  1966   000CAC  FFFF               	dw	65535	; assembler added errata NOP
  1967   000CAE  0012               	return		;funcret
  1968   000CB0  FFFF               	dw	65535	; errata NOP
  1969   000CB2                     __end_of_dio_drv_set:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function ___awdiv *****************
  1973 ;; Defined at:
  1974 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  dividend        2    4[COMRAM] int 
  1977 ;;  divisor         2    6[COMRAM] int 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  quotient        2   10[COMRAM] int 
  1980 ;;  sign            1    9[COMRAM] unsigned char 
  1981 ;;  counter         1    8[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    4[COMRAM] int 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1991 ;;      Params:         4       0       0       0       0       0       0
  1992 ;;      Locals:         4       0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0
  1994 ;;      Totals:         8       0       0       0       0       0       0
  1995 ;;Total ram usage:        8 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 2
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_dio_drv_init
  2002 ;;		_dio_drv_set
  2003 ;;		_dio_drv_get
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text8
  2008   000CB2                     __ptext8:
  2009                           	callstack 0
  2010   000CB2                     ___awdiv:
  2011                           	callstack 0
  2012   000CB2  FFFF               	dw	65535	; assembler added errata NOP
  2013   000CB4  0E00               	movlw	0
  2014   000CB6  6E0A               	movwf	___awdiv@sign^0,c
  2015   000CB8  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  2016   000CBA  EF64  F006         	goto	u550
  2017   000CBE  EF61  F006         	goto	u551
  2018   000CC2                     u551:
  2019   000CC2  FFFF               	dw	65535	; assembler added errata NOP
  2020   000CC4  EF6B  F006         	goto	l1209
  2021   000CC8                     u550:
  2022   000CC8  FFFF               	dw	65535	; assembler added errata NOP
  2023   000CCA  6C07               	negf	___awdiv@divisor^0,c
  2024   000CCC  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  2025   000CCE  B0D8               	btfsc	status,0,c
  2026   000CD0  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  2027   000CD2  0E01               	movlw	1
  2028   000CD4  6E0A               	movwf	___awdiv@sign^0,c
  2029   000CD6                     l1209:
  2030   000CD6  FFFF               	dw	65535	; assembler added errata NOP
  2031   000CD8  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  2032   000CDA  EF74  F006         	goto	u560
  2033   000CDE  EF71  F006         	goto	u561
  2034   000CE2                     u561:
  2035   000CE2  FFFF               	dw	65535	; assembler added errata NOP
  2036   000CE4  EF7B  F006         	goto	l1215
  2037   000CE8                     u560:
  2038   000CE8  FFFF               	dw	65535	; assembler added errata NOP
  2039   000CEA  6C05               	negf	___awdiv@dividend^0,c
  2040   000CEC  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  2041   000CEE  B0D8               	btfsc	status,0,c
  2042   000CF0  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  2043   000CF2  0E01               	movlw	1
  2044   000CF4  1A0A               	xorwf	___awdiv@sign^0,f,c
  2045   000CF6                     l1215:
  2046   000CF6  FFFF               	dw	65535	; assembler added errata NOP
  2047   000CF8  0E00               	movlw	0
  2048   000CFA  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  2049   000CFC  0E00               	movlw	0
  2050   000CFE  6E0B               	movwf	___awdiv@quotient^0,c
  2051   000D00  5007               	movf	___awdiv@divisor^0,w,c
  2052   000D02  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  2053   000D04  B4D8               	btfsc	status,2,c
  2054   000D06  EF87  F006         	goto	u571
  2055   000D0A  EF8A  F006         	goto	u570
  2056   000D0E                     u571:
  2057   000D0E  FFFF               	dw	65535	; assembler added errata NOP
  2058   000D10  EFBB  F006         	goto	l1237
  2059   000D14                     u570:
  2060   000D14  FFFF               	dw	65535	; assembler added errata NOP
  2061   000D16  0E01               	movlw	1
  2062   000D18  6E09               	movwf	___awdiv@counter^0,c
  2063   000D1A  EF94  F006         	goto	l1223
  2064   000D1E                     l1221:
  2065   000D1E  FFFF               	dw	65535	; assembler added errata NOP
  2066   000D20  90D8               	bcf	status,0,c
  2067   000D22  3607               	rlcf	___awdiv@divisor^0,f,c
  2068   000D24  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  2069   000D26  2A09               	incf	___awdiv@counter^0,f,c
  2070   000D28                     l1223:
  2071   000D28  FFFF               	dw	65535	; assembler added errata NOP
  2072   000D2A  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  2073   000D2C  EF9A  F006         	goto	u581
  2074   000D30  EF9D  F006         	goto	u580
  2075   000D34                     u581:
  2076   000D34  FFFF               	dw	65535	; assembler added errata NOP
  2077   000D36  EF8F  F006         	goto	l1221
  2078   000D3A                     u580:
  2079   000D3A  FFFF               	dw	65535	; assembler added errata NOP
  2080   000D3C                     l1225:
  2081   000D3C  FFFF               	dw	65535	; assembler added errata NOP
  2082   000D3E  90D8               	bcf	status,0,c
  2083   000D40  360B               	rlcf	___awdiv@quotient^0,f,c
  2084   000D42  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  2085   000D44  5007               	movf	___awdiv@divisor^0,w,c
  2086   000D46  5C05               	subwf	___awdiv@dividend^0,w,c
  2087   000D48  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2088   000D4A  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  2089   000D4C  A0D8               	btfss	status,0,c
  2090   000D4E  EFAB  F006         	goto	u591
  2091   000D52  EFAE  F006         	goto	u590
  2092   000D56                     u591:
  2093   000D56  FFFF               	dw	65535	; assembler added errata NOP
  2094   000D58  EFB4  F006         	goto	l1233
  2095   000D5C                     u590:
  2096   000D5C  FFFF               	dw	65535	; assembler added errata NOP
  2097   000D5E  5007               	movf	___awdiv@divisor^0,w,c
  2098   000D60  5E05               	subwf	___awdiv@dividend^0,f,c
  2099   000D62  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2100   000D64  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  2101   000D66  800B               	bsf	___awdiv@quotient^0,0,c
  2102   000D68                     l1233:
  2103   000D68  FFFF               	dw	65535	; assembler added errata NOP
  2104   000D6A  90D8               	bcf	status,0,c
  2105   000D6C  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  2106   000D6E  3207               	rrcf	___awdiv@divisor^0,f,c
  2107   000D70  2E09               	decfsz	___awdiv@counter^0,f,c
  2108   000D72  EF9E  F006         	goto	l1225
  2109   000D76                     l1237:
  2110   000D76  FFFF               	dw	65535	; assembler added errata NOP
  2111   000D78  500A               	movf	___awdiv@sign^0,w,c
  2112   000D7A  B4D8               	btfsc	status,2,c
  2113   000D7C  EFC2  F006         	goto	u601
  2114   000D80  EFC5  F006         	goto	u600
  2115   000D84                     u601:
  2116   000D84  FFFF               	dw	65535	; assembler added errata NOP
  2117   000D86  EFCA  F006         	goto	l1241
  2118   000D8A                     u600:
  2119   000D8A  FFFF               	dw	65535	; assembler added errata NOP
  2120   000D8C  6C0B               	negf	___awdiv@quotient^0,c
  2121   000D8E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  2122   000D90  B0D8               	btfsc	status,0,c
  2123   000D92  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  2124   000D94                     l1241:
  2125   000D94  FFFF               	dw	65535	; assembler added errata NOP
  2126   000D96  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2127   000D9A  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2128   000D9E  0012               	return		;funcret
  2129   000DA0  FFFF               	dw	65535	; errata NOP
  2130   000DA2                     __end_of___awdiv:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _lo_isr *****************
  2134 ;; Defined at:
  2135 ;;		line 19 in file "../app/inc\interrupt.h"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         0       0       0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0
  2151 ;;      Temps:          4       0       0       0       0       0       0
  2152 ;;      Totals:         4       0       0       0       0       0       0
  2153 ;;Total ram usage:        4 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		Interrupt level 1
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	intcodelo
  2164   000018                     __pintcodelo:
  2165                           	callstack 0
  2166   000018                     _lo_isr:
  2167                           	callstack 0
  2168   000018  FFFF               	dw	65535	; assembler added errata NOP
  2169                           
  2170                           ;incstack = 0
  2171   00001A  8048               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2172   00001C  CFD8 F002          	movff	status,??_lo_isr+1
  2173   000020  CFE8 F003          	movff	wreg,??_lo_isr+2
  2174   000024  CFE0 F004          	movff	bsr,??_lo_isr+3
  2175   000028                     
  2176                           ;../app/inc\interrupt.h: 22:     if (INTCONbits.TMR0IF)
  2177   000028  A4F2               	btfss	242,2,c	;volatile
  2178   00002A  EF19  F000         	goto	i1u51_21
  2179   00002E  EF1C  F000         	goto	i1u51_20
  2180   000032                     i1u51_21:
  2181   000032  FFFF               	dw	65535	; assembler added errata NOP
  2182   000034  EF32  F000         	goto	i1l179
  2183   000038                     i1u51_20:
  2184   000038  FFFF               	dw	65535	; assembler added errata NOP
  2185   00003A                     
  2186                           ;../app/inc\interrupt.h: 23:  {;../app/inc\interrupt.h: 24:   TMR0L = 0xF0;
  2187   00003A  0EF0               	movlw	240
  2188   00003C  6ED6               	movwf	214,c	;volatile
  2189   00003E                     
  2190                           ;../app/inc\interrupt.h: 25:         LATDbits.LATD0 = !LATDbits.LATD0;
  2191   00003E  A08C               	btfss	140,0,c	;volatile
  2192   000040  EF24  F000         	goto	i1u52_21
  2193   000044  EF29  F000         	goto	i1u52_20
  2194   000048                     i1u52_21:
  2195   000048  FFFF               	dw	65535	; assembler added errata NOP
  2196   00004A  6A01               	clrf	??_lo_isr^0,c
  2197   00004C  2A01               	incf	??_lo_isr^0,f,c
  2198   00004E  EF2B  F000         	goto	i1u53_28
  2199   000052                     i1u52_20:
  2200   000052  FFFF               	dw	65535	; assembler added errata NOP
  2201   000054  6A01               	clrf	??_lo_isr^0,c
  2202   000056                     i1u53_28:
  2203   000056  FFFF               	dw	65535	; assembler added errata NOP
  2204   000058  508C               	movf	140,w,c	;volatile
  2205   00005A  1801               	xorwf	??_lo_isr^0,w,c
  2206   00005C  0BFE               	andlw	-2
  2207   00005E  1801               	xorwf	??_lo_isr^0,w,c
  2208   000060  6E8C               	movwf	140,c	;volatile
  2209   000062                     
  2210                           ;../app/inc\interrupt.h: 26:         INTCONbits.TMR0IF = 0;
  2211   000062  94F2               	bcf	242,2,c	;volatile
  2212   000064                     i1l179:
  2213   000064  FFFF               	dw	65535	; assembler added errata NOP
  2214   000066  C004  FFE0         	movff	??_lo_isr+3,bsr
  2215   00006A  C003  FFE8         	movff	??_lo_isr+2,wreg
  2216   00006E  C002  FFD8         	movff	??_lo_isr+1,status
  2217   000072  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2218   000074  0010               	retfie	
  2219   000076  FFFF               	dw	65535	; errata NOP
  2220   000078                     __end_of_lo_isr:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _hi_isr *****************
  2224 ;; Defined at:
  2225 ;;		line 14 in file "../app/inc\interrupt.h"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		None
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2239 ;;      Params:         0       0       0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0
  2242 ;;      Totals:         0       0       0       0       0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		Interrupt level 2
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	intcode
  2253   000008                     __pintcode:
  2254                           	callstack 0
  2255   000008                     _hi_isr:
  2256                           	callstack 0
  2257   000008  FFFF               	dw	65535	; assembler added errata NOP
  2258                           
  2259                           ;incstack = 0
  2260   00000A  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2261   00000C  EFEF  F007         	goto	int_func
  2262   000010                     
  2263                           	psect	intcode_body
  2264   000FDE                     __pintcode_body:
  2265                           	callstack 24
  2266   000FDE                     int_func:
  2267                           	callstack 24
  2268   000FDE  FFFF               	dw	65535	; errata NOP
  2269   000FE0  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2270   000FE2  0011               	retfie		f
  2271   000FE4  FFFF               	dw	65535	; errata NOP
  2272   000FE6                     __end_of_hi_isr:
  2273                           	callstack 0
  2274                           
  2275                           	psect	rparam
  2276   000000                     
  2277                           	psect	temp
  2278   000048                     btemp:
  2279                           	callstack 0
  2280   000048                     	ds	1
  2281   000000                     int$flags	set	btemp
  2282   000000                     wtemp8	set	btemp+1
  2283   000000                     ttemp5	set	btemp+1
  2284   000000                     ttemp6	set	btemp+4
  2285   000000                     ttemp7	set	btemp+8
  2286                           
  2287                           	psect	config
  2288                           
  2289                           ; Padding undefined space
  2290   300000                     	org	3145728
  2291   300000  FF                 	db	255
  2292                           
  2293                           ;Config register CONFIG1H @ 0x300001
  2294                           ;	Oscillator Selection bits
  2295                           ;	OSC = HSPLL, HS oscillator with PLL enabled/Clock frequency = (4 x FOSC)
  2296                           ;	Oscillator System Clock Switch Enable bit
  2297                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  2298   300001                     	org	3145729
  2299   300001  26                 	db	38
  2300                           
  2301                           ;Config register CONFIG2L @ 0x300002
  2302                           ;	Power-up Timer Enable bit
  2303                           ;	PWRT = OFF, PWRT disabled
  2304                           ;	Brown-out Reset Enable bit
  2305                           ;	BOR = ON, Brown-out Reset enabled
  2306                           ;	Brown-out Reset Voltage bits
  2307                           ;	BORV = 27, VBOR set to 2.7V
  2308   300002                     	org	3145730
  2309   300002  0B                 	db	11
  2310                           
  2311                           ;Config register CONFIG2H @ 0x300003
  2312                           ;	Watchdog Timer Enable bit
  2313                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2314                           ;	Watchdog Timer Postscale Select bits
  2315                           ;	WDTPS = 128, 1:128
  2316   300003                     	org	3145731
  2317   300003  0E                 	db	14
  2318                           
  2319                           ; Padding undefined space
  2320   300004                     	org	3145732
  2321   300004  FF                 	db	255
  2322                           
  2323                           ;Config register CONFIG3H @ 0x300005
  2324                           ;	CCP2 Mux bit
  2325                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  2326   300005                     	org	3145733
  2327   300005  01                 	db	1
  2328                           
  2329                           ;Config register CONFIG4L @ 0x300006
  2330                           ;	Stack Full/Underflow Reset Enable bit
  2331                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  2332                           ;	Low Voltage ICSP Enable bit
  2333                           ;	LVP = OFF, Low Voltage ICSP disabled
  2334                           ;	Background Debugger Enable bit
  2335                           ;	DEBUG = ON, Background Debugger enabled. RB6 and RB7 are dedicated to In-Circuit Debug
      +                          .
  2336   300006                     	org	3145734
  2337   300006  01                 	db	1
  2338                           
  2339                           ; Padding undefined space
  2340   300007                     	org	3145735
  2341   300007  FF                 	db	255
  2342                           
  2343                           ;Config register CONFIG5L @ 0x300008
  2344                           ;	Code Protection bit
  2345                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  2346                           ;	Code Protection bit
  2347                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  2348                           ;	Code Protection bit
  2349                           ;	CP2 = 0x1, unprogrammed default
  2350                           ;	Code Protection bit
  2351                           ;	CP3 = 0x1, unprogrammed default
  2352   300008                     	org	3145736
  2353   300008  0F                 	db	15
  2354                           
  2355                           ;Config register CONFIG5H @ 0x300009
  2356                           ;	Boot Block Code Protection bit
  2357                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  2358                           ;	Data EEPROM Code Protection bit
  2359                           ;	CPD = OFF, Data EEPROM not code protected
  2360   300009                     	org	3145737
  2361   300009  C0                 	db	192
  2362                           
  2363                           ;Config register CONFIG6L @ 0x30000A
  2364                           ;	Write Protection bit
  2365                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  2366                           ;	Write Protection bit
  2367                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  2368                           ;	Write Protection bit
  2369                           ;	WRT2 = 0x1, unprogrammed default
  2370                           ;	Write Protection bit
  2371                           ;	WRT3 = 0x1, unprogrammed default
  2372   30000A                     	org	3145738
  2373   30000A  0F                 	db	15
  2374                           
  2375                           ;Config register CONFIG6H @ 0x30000B
  2376                           ;	Configuration Register Write Protection bit
  2377                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  2378                           ;	Boot Block Write Protection bit
  2379                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  2380                           ;	Data EEPROM Write Protection bit
  2381                           ;	WRTD = OFF, Data EEPROM not write protected
  2382   30000B                     	org	3145739
  2383   30000B  E0                 	db	224
  2384                           
  2385                           ;Config register CONFIG7L @ 0x30000C
  2386                           ;	Table Read Protection bit
  2387                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  2388                           ;	Table Read Protection bit
  2389                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  2390                           ;	Table Read Protection bit
  2391                           ;	EBTR2 = 0x1, unprogrammed default
  2392                           ;	Table Read Protection bit
  2393                           ;	EBTR3 = 0x1, unprogrammed default
  2394   30000C                     	org	3145740
  2395   30000C  0F                 	db	15
  2396                           
  2397                           ;Config register CONFIG7H @ 0x30000D
  2398                           ;	Boot Block Table Read Protection bit
  2399                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  2400   30000D                     	org	3145741
  2401   30000D  40                 	db	64
  2402                           tosu	equ	0xFFF
  2403                           tosh	equ	0xFFE
  2404                           tosl	equ	0xFFD
  2405                           stkptr	equ	0xFFC
  2406                           pclatu	equ	0xFFB
  2407                           pclath	equ	0xFFA
  2408                           pcl	equ	0xFF9
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           prodh	equ	0xFF4
  2414                           prodl	equ	0xFF3
  2415                           indf0	equ	0xFEF
  2416                           postinc0	equ	0xFEE
  2417                           postdec0	equ	0xFED
  2418                           preinc0	equ	0xFEC
  2419                           plusw0	equ	0xFEB
  2420                           fsr0h	equ	0xFEA
  2421                           fsr0l	equ	0xFE9
  2422                           wreg	equ	0xFE8
  2423                           indf1	equ	0xFE7
  2424                           postinc1	equ	0xFE6
  2425                           postdec1	equ	0xFE5
  2426                           preinc1	equ	0xFE4
  2427                           plusw1	equ	0xFE3
  2428                           fsr1h	equ	0xFE2
  2429                           fsr1l	equ	0xFE1
  2430                           bsr	equ	0xFE0
  2431                           indf2	equ	0xFDF
  2432                           postinc2	equ	0xFDE
  2433                           postdec2	equ	0xFDD
  2434                           preinc2	equ	0xFDC
  2435                           plusw2	equ	0xFDB
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    30
    Data        21
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26      71
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    d0_out_st$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    d0_out_st$super$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    d0_out_st$super$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    d0_out_st$super$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_callback@dio_drv_pst$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_callback@dio_drv_pst$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_callback@dio_drv_pst$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    dio_drv_callback@dio_drv_pst$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_callback@dio_drv_pst$super$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_callback@dio_drv_pst$super$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_callback@dio_drv_pst$super$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_callback@self$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_callback@self$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_callback@self$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_get@dio_drv_pst$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_get@dio_drv_pst$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_get@dio_drv_pst$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    dio_drv_get@dio_drv_pst$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_get@dio_drv_pst$super$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_get@dio_drv_pst$super$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_get@dio_drv_pst$super$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_init@dio_drv_pst	PTR struct dio_drv_st size(1) Largest target is 21
		 -> d0_out_st(COMRAM[21]), led_out_st(COMRAM[21]), 

    dio_drv_init@dio_drv_pst$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_init@dio_drv_pst$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_init@dio_drv_pst$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    dio_drv_init@dio_drv_pst$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_init@dio_drv_pst$super$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_init@dio_drv_pst$super$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_init@dio_drv_pst$super$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_init@self	PTR struct dio_drv_st size(1) Largest target is 21
		 -> d0_out_st(COMRAM[21]), led_out_st(COMRAM[21]), 

    dio_drv_set@dio_drv_pst	PTR struct dio_drv_st size(2) Largest target is 21
		 -> led_out_st(COMRAM[21]), led_out_st$super(COMRAM[11]), NULL(NULL[0]), 

    dio_drv_set@dio_drv_pst$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_set@dio_drv_pst$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_set@dio_drv_pst$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    dio_drv_set@dio_drv_pst$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_set@dio_drv_pst$super$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    dio_drv_set@dio_drv_pst$super$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    dio_drv_set@dio_drv_pst$super$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    dio_drv_set@self	PTR struct dio_if_tst size(2) Largest target is 21
		 -> led_out_st(COMRAM[21]), led_out_st$super(COMRAM[11]), NULL(NULL[0]), 

    dio_reg_dir	const PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), 
		 -> TRISE(BITBIGSFRhlll[1]), 

    dio_reg_in	const PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    dio_reg_out	const PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    init_dio_drv@self	PTR struct dio_drv_st size(1) Largest target is 21
		 -> d0_out_st(COMRAM[21]), led_out_st(COMRAM[21]), 

    init_dio_drv@self$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    init_dio_drv@self$super$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    init_dio_drv@self$super$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    init_dio_drv@self$super$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    led_out_pst	PTR struct dio_if_tst size(2) Largest target is 21
		 -> led_out_st(COMRAM[21]), led_out_st$super(COMRAM[11]), NULL(NULL[0]), 

    led_out_pst$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    led_out_pst$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    led_out_pst$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    led_out_st$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 0
		 -> dio_drv_callback(), NULL(), 

    led_out_st$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 0
		 -> dio_drv_get(), NULL(), 

    led_out_st$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    led_out_st$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 0
		 -> dio_drv_set(), NULL(), 

    led_out_st$super$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    led_out_st$super$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    led_out_st$super$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    NULL$0	PTR struct dio_if_tst size(2) Largest target is 0

    psg_silence@self$config_st$dout_relay1_pst	PTR struct dio_if_tst size(2) Largest target is 0

    psg_silence@self$psg_silence	PTR FTN(PTR struct sn76489_tst,)void  size(2) Largest target is 1
		 -> psg_silence(), 

    psg_silence@self$send_byte	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> send_byte(), 

    psg_silence@self$write_enabled	PTR FTN(PTR struct sn76489_tst,_Bool ,)void  size(2) Largest target is 1
		 -> write_enabled(), 

    psg_silence@self$write_port	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> write_port(), 

    S281sn76489_cfg_tst$dout_relay1_pst	PTR struct dio_if_tst size(2) Largest target is 0

    S290$2$0	PTR struct sn76489_tst size(2) Largest target is 0

    S290$3$0	PTR struct sn76489_tst size(2) Largest target is 0

    S290$4$0	PTR struct sn76489_tst size(2) Largest target is 0

    S290$5$0	PTR struct sn76489_tst size(2) Largest target is 0

    S290sn76489_tst$psg_silence	PTR FTN(PTR struct sn76489_tst,)void  size(2) Largest target is 1
		 -> psg_silence(), 

    S290sn76489_tst$send_byte	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> send_byte(), 

    S290sn76489_tst$write_enabled	PTR FTN(PTR struct sn76489_tst,_Bool ,)void  size(2) Largest target is 1
		 -> write_enabled(), 

    S290sn76489_tst$write_port	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> write_port(), 

    S40$0$0	PTR struct dio_if_tst size(2) Largest target is 0

    S40$1$0	PTR struct dio_if_tst size(2) Largest target is 21
		 -> led_out_st(COMRAM[21]), NULL(NULL[0]), 

    S40$2$0	PTR struct dio_if_tst size(2) Largest target is 0

    S40dio_if_tst$callback	PTR FTN(PTR struct dio_if_tst,)void  size(2) Largest target is 1
		 -> dio_drv_callback(), NULL(), 

    S40dio_if_tst$get	PTR FTN(PTR struct dio_if_tst,)_Bool  size(2) Largest target is 1
		 -> dio_drv_get(), NULL(), 

    S40dio_if_tst$set	PTR FTN(PTR struct dio_if_tst,_Bool ,)void  size(2) Largest target is 1
		 -> dio_drv_set(), NULL(), 

    S73$3$0	PTR struct dio_drv_st size(1) Largest target is 21
		 -> d0_out_st(COMRAM[21]), led_out_st(COMRAM[21]), 

    S73dio_drv_st$init	PTR FTN(PTR struct dio_drv_st,)short  size(2) Largest target is 2
		 -> dio_drv_init(), 

    send_byte@self$config_st$dout_relay1_pst	PTR struct dio_if_tst size(2) Largest target is 0

    send_byte@self$psg_silence	PTR FTN(PTR struct sn76489_tst,)void  size(2) Largest target is 1
		 -> psg_silence(), 

    send_byte@self$send_byte	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> send_byte(), 

    send_byte@self$write_enabled	PTR FTN(PTR struct sn76489_tst,_Bool ,)void  size(2) Largest target is 1
		 -> write_enabled(), 

    send_byte@self$write_port	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> write_port(), 

    sn76489_init@self$config_st$dout_relay1_pst	PTR struct dio_if_tst size(2) Largest target is 0

    sn76489_init@self$psg_silence	PTR FTN(PTR struct sn76489_tst,)void  size(2) Largest target is 1
		 -> psg_silence(), 

    sn76489_init@self$send_byte	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> send_byte(), 

    sn76489_init@self$write_enabled	PTR FTN(PTR struct sn76489_tst,_Bool ,)void  size(2) Largest target is 1
		 -> write_enabled(), 

    sn76489_init@self$write_port	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> write_port(), 

    write_enabled@self$config_st$dout_relay1_pst	PTR struct dio_if_tst size(2) Largest target is 0

    write_enabled@self$psg_silence	PTR FTN(PTR struct sn76489_tst,)void  size(2) Largest target is 1
		 -> psg_silence(), 

    write_enabled@self$send_byte	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> send_byte(), 

    write_enabled@self$write_enabled	PTR FTN(PTR struct sn76489_tst,_Bool ,)void  size(2) Largest target is 1
		 -> write_enabled(), 

    write_enabled@self$write_port	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> write_port(), 

    write_port@self$config_st$dout_relay1_pst	PTR struct dio_if_tst size(2) Largest target is 0

    write_port@self$psg_silence	PTR FTN(PTR struct sn76489_tst,)void  size(2) Largest target is 1
		 -> psg_silence(), 

    write_port@self$send_byte	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> send_byte(), 

    write_port@self$write_enabled	PTR FTN(PTR struct sn76489_tst,_Bool ,)void  size(2) Largest target is 1
		 -> write_enabled(), 

    write_port@self$write_port	PTR FTN(PTR struct sn76489_tst,unsigned char ,)void  size(2) Largest target is 1
		 -> write_port(), 


Critical Paths under _main in COMRAM

    _main->_led_toggle
    _gpio_init_pins->_init_dio_drv
    _init_dio_drv->_dio_drv_init
    _dio_drv_init->___awdiv
    _led_toggle->_dio_drv_set
    _dio_drv_set->___awdiv

Critical Paths under _lo_isr in COMRAM

    None.

Critical Paths under _hi_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lo_isr in BANK0

    None.

Critical Paths under _hi_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lo_isr in BANK1

    None.

Critical Paths under _hi_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lo_isr in BANK2

    None.

Critical Paths under _hi_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lo_isr in BANK3

    None.

Critical Paths under _hi_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lo_isr in BANK4

    None.

Critical Paths under _hi_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lo_isr in BANK5

    None.

Critical Paths under _hi_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4240
                                NULL *
                        _dio_drv_set *
                         _led_toggle
                         _setup_pins
                             _timer0
 ---------------------------------------------------------------------------------
 (1) _timer0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_pins                                           0     0      0    1514
                     _gpio_init_pins
 ---------------------------------------------------------------------------------
 (2) _gpio_init_pins                                       0     0      0    1514
                       _init_dio_drv
 ---------------------------------------------------------------------------------
 (3) _init_dio_drv                                         1     0      1    1514
                                             22 COMRAM     1     0      1
                       _dio_drv_init *
 ---------------------------------------------------------------------------------
 (4) _dio_drv_init                                        10     9      1    1208
                                             12 COMRAM    10     9      1
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _led_toggle                                           1     1      0    1363
                                             25 COMRAM     1     1      0
                                NULL *
                        _dio_drv_set *
 ---------------------------------------------------------------------------------
 (2) _dio_drv_set                                         13    10      3    1363
                                             12 COMRAM    13    10      3
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     688
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _lo_isr                                               4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _hi_isr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   NULL(Fake) *
   _dio_drv_set *
     ___awdiv
   _led_toggle *
     NULL(Fake) *
     _dio_drv_set *
   _setup_pins *
     _gpio_init_pins
       _init_dio_drv
         _dio_drv_init *
           ___awdiv
   _timer0 *

 _lo_isr (ROOT)

 _hi_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1A      47       1       56.3%
BITBIGSFRhlll       39      0       0      19        0.0%
BITBIGSFRhlh        1A      0       0      17        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhllh        4      0       0      18        0.0%
BITBIGSFRlh          4      0       0      20        0.0%
BITBIGSFRll          4      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      22        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 10 13:08:26 2024

                                            l44 07CA                                              l66 0A06  
                                            l84 0CAC                                    ___awdiv@sign 000A  
                                            bsr 0FE0                                             l101 0EB6  
                                           l142 0FC4                                             l139 0F42  
                                           l431 0D9E                                             l186 0E30  
                                           l189 0FA6                                             u600 0D8A  
                                           u601 0D84                                             u550 0CC8  
                                           u710 0988                                             u630 079A  
                                           u614 067C                                             u551 0CC2  
                                           u711 0980                                             u631 0792  
                                           u615 0676                                             u560 0CE8  
                                           u800 0B3A                                             u720 098C  
                                           u704 0930                                             u640 079E  
                                           u624 0706                                             u561 0CE2  
                                           u705 092A                                             u625 0700  
                                           u570 0D14                                             u730 09D6  
                                           u571 0D0E                                             u731 09CE  
                                           u580 0D3A                                             u740 09DA  
                                           u581 0D34                                             u590 0D5C  
                                           u830 0C2C                                             u814 0B7C  
                                           u670 0894                                             u654 07E6  
                                           u591 0D56                                             u831 0C24  
                                           u815 0B76                                             u671 088C  
                                           u655 07E0                                             u840 0C30  
                                           u824 0BD2                                             u680 0898  
                                           u664 0836                                             u825 0BCC  
                                           u665 0830                                             u850 0C7C  
                                           u851 0C74                                             u860 0C80  
                                           u765 0A2A                                             u790 0B36  
                                           u774 0A86                                             u766 0A2C  
                                           u870 0DBA                                             u694 08DA  
                                           u758 0E9C                                             u791 0B2E  
                                           u775 0A80                                             u871 0DB4  
                                           u695 08D4                                             u759 0EB4  
                                           u784 0AD6                                             u785 0AD0  
                                           u888 0DDA                                             u889 0DF2  
                                           u898 0E18                                             u978 0EE2  
                                           u899 0E30                                             u979 0EFA  
                        dio_drv_set@dio_drv_pst 0016                                             tosl 0FFD  
                                           wreg 0FE8                                            l1201 0CB4  
                                          l1211 0CEA                                            l1203 0CB8  
                                          l1051 0FAC                                            l1221 0D1E  
                                          l1213 0CF2                                            l1205 0CCA  
                                          l1053 0FC0                                            l1231 0D66  
                                          l1223 0D28                                            l1215 0CF6  
                                          l1207 0CD2                                            l1241 0D94  
                                          l1233 0D68                                            l1225 0D3C  
                                          l1217 0D00                                            l1209 0CD6  
                                          l1321 0E6A                                            l1235 0D70  
                                          l1227 0D44                                            l1219 0D16  
                                          l1331 0A2C                                            l1251 062E  
                                          l1323 0E76                                            l1315 0E38  
                                          l1229 0D5E                                            l1237 0D76  
                                          l1341 0AC0                                            l1333 0A30  
                                          l1261 06F0                                            l1253 0652  
                                          l1245 0620                                            l1325 0E88  
                                          l1317 0E46                                            l1239 0D8C  
                                          l1335 0A34                                            l1327 0A0C  
                                          l1271 07D0                                            l1255 0666  
                                          l1247 0626                                            l1319 0E58  
                                          l1353 0C0C                                            l1345 0B16  
                                          l1337 0A5A                                            l1329 0A16  
                                          l1281 091A                                            l1273 0820  
                                          l1265 0740                                            l1249 062A  
                                          l1441 0EFC                                            l1347 0B66  
                                          l1339 0A70                                            l1259 06BC  
                                          l1371 0F0C                                            l1435 0EBA  
                                          l1349 0BBC                                            l1357 0C5C  
                                          l1381 0DBC                                            l1285 096A  
                                          l1277 0876                                            l1269 077C  
                                          l1373 0F1C                                            l1437 0EC0  
                                          l1383 0DF8                                            l1279 08C4  
                                          l1375 0F22                                            l1391 0F9E  
                                          l1439 0EC4                                            l1481 0764  
                                          l1289 09B8                                            l1377 0F32  
                                          l1393 0FA0                                            l1385 0F82  
                                          l1491 0B4E                                            l1379 0DA4  
                                          l1483 07B2                                            l1395 0FA2  
                                          l1387 0F96                                            l1493 0C44  
                                          l1485 08AC                                            l1397 0FA4  
                                          l1389 0F9A                                            l1495 0C94  
                                          l1487 09A0                                            l1479 06E0  
                                          l1489 09EE                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                          _LATD 0F8C                                            _LATE 0F8D  
                                          _main 0EBA                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            btemp 0048  
                                          prodl 0FF3                                            start 0078  
                                  ___param_bank 0000                                     led_toggle@i 001D  
                                         ?_main 0001                                 __end_of___awdiv 0DA2  
                               ___awdiv@divisor 0007                                           i1l179 0064  
                                         i2l173 0FE0                                 ___awdiv@counter 0009  
                                         _TMR0L 0FD6                                           _PORTA 0F80  
                                         _PORTB 0F81                                           _PORTC 0F82  
                                         _PORTD 0F83                                           _PORTE 0F84  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                                           _TRISD 0F95  
                                         _TRISE 0F96                                           pclath 0FFA  
                                         tablat 0FF5                                           ttemp5 0049  
                                         ttemp6 004C                                           ttemp7 0050  
                                         status 0FD8                                           wtemp8 0049  
                              _dio_drv_callback 0000                                 __initialization 0F46  
                                  __end_of_main 0F0A                            __end_of_dio_drv_init 0A0C  
                                        ??_main 001B                                   __activetblptr 0002  
                              ___awdiv@dividend 0005                                   ?_init_dio_drv 0017  
                                        i1l1151 003A                                          i1l1153 003E  
                                        i1l1155 0062                                          i1l1149 0028  
                                        _INTCON 0FF2                                       ??___awdiv 0009  
                                        _hi_isr 0008                                          _lo_isr 0018  
                                        clear_0 0F6C                                ___awdiv@quotient 000B  
                                        _timer0 0FAA                                          isa$std 0001  
                                  __pdataCOMRAM 0033                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                                  ??_init_dio_drv 0018  
                               dio_drv_set@self 000D                                      __accesstop 0080  
                       __end_of__initialization 0F72                                   ___rparam_used 0001  
                                __pcstackCOMRAM 0001                                         ?_hi_isr 0001  
                                       ?_lo_isr 0001                                      _dio_reg_in 0615  
                                       ?_timer0 0001                                         i1u51_20 0038  
                                       i1u51_21 0032                                         i1u52_20 0052  
                                       i1u52_21 0048                                         i1u53_28 0056  
                                    _led_toggle 0DA2                                      _led_out_st 001E  
                                  _dio_drv_init 0620                                   _write_enabled 0000  
                                       __Hparam 0000                                         __Lparam 0000  
                                _gpio_init_pins 0F0A                                         ___awdiv 0CB2  
                                  __psmallconst 0600                            __end_of_init_dio_drv 0EBA  
                                       __pcinit 0F46                                         __ramtop 0600  
                                       __ptext0 0EBA                                         __ptext1 0FAA  
                                       __ptext2 0F80                                         __ptext3 0F0A  
                                       __ptext4 0E36                                         __ptext5 0620  
                                       __ptext6 0DA2                                         __ptext7 0A0C  
                                       __ptext8 0CB2                                       _T0CONbits 0FD5  
                                __pintcode_body 0FDE                            end_of_initialization 0F72  
                                 __Lmediumconst 0000                                         int_func 0FDE  
                        __end_of_gpio_init_pins 0F46                                dio_drv_init@self 000D  
                                       postdec1 0FE5                                         postdec2 0FDD  
                                       postinc0 0FEE                                         postinc2 0FDE  
                                 ??_dio_drv_set 0010                                      _setup_pins 0F80  
                                   ?_led_toggle 0001                            dio_drv_init@position 0016  
                               ?_gpio_init_pins 0001                                       _d0_out_st 0033  
                                 __pidataCOMRAM 0FC8                                  __end_of_hi_isr 0FE6  
                                    _write_port 0000                                  __end_of_lo_isr 0078  
                                __end_of_timer0 0FC8                             start_initialization 0F46  
                           __end_of_dio_drv_set 0CB2                             __end_of_dio_reg_dir 0615  
                           __end_of_dio_reg_out 060B                                        ??_hi_isr 0001  
                                      ??_lo_isr 0001                                        ??_timer0 0005  
                                   ?_setup_pins 0001                                     __pbssCOMRAM 001B  
                                  _init_dio_drv 0E36                                       __pintcode 0008  
                                      ?___awdiv 0005                                     __pintcodelo 0018  
                                   __smallconst 0600                                     _dio_drv_get 0000  
                                   _dio_drv_set 0A0C                                     _dio_reg_dir 060B  
                                   _dio_reg_out 0601                                        _LATDbits 0F8C  
                                     _send_byte 0000                                        _RCONbits 0FD0  
                                   _led_out_pst 001B                                     _INTCON2bits 0FF1  
                                     copy_data0 0F5A                                    ??_led_toggle 001A  
                              ??_gpio_init_pins 0018                              __end_of_dio_reg_in 061F  
                                      __Hrparam 0000                         dio_drv_init@dio_drv_pst 0014  
                                      __Lrparam 0000                              __end_of_led_toggle 0E36  
                               fp__dio_drv_init 0010                                init_dio_drv@self 0017  
                                      isa$xinst 0000                                        int$flags 0048  
                            dio_drv_init@number 0015                                    ??_setup_pins 0018  
                                    _INTCONbits 0FF2                                        intlevel1 0FE6  
                                      intlevel2 0FE6                                   ?_dio_drv_init 000D  
                           dio_drv_set@position 0019                                  fp__dio_drv_set 0010  
                            __end_of_setup_pins 0FAA                                     _psg_silence 0000  
                                  ?_dio_drv_set 000D                              dio_drv_set@state_b 000F  
                             dio_drv_set@number 0018                                  ??_dio_drv_init 000E  
